@prefix : <http://schema.org/validation#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema1: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:ValidSchema3DModel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isResizable ] ;
    sh:targetClass schema1:3DModel .

:ValidSchemaAMRadioChannel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AMRadioChannel .

:ValidSchemaAPIReference a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:assembly ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:assemblyVersion ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:executableLibraryName ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:targetPlatform ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:programmingModel ] ;
    sh:targetClass schema1:APIReference .

:ValidSchemaAcceptAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AcceptAction .

:ValidSchemaAccountingService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AccountingService .

:ValidSchemaAchieveAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AchieveAction .

:ValidSchemaActivateAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ActivateAction .

:ValidSchemaAddAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AddAction .

:ValidSchemaAdultEntertainment a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AdultEntertainment .

:ValidSchemaAdvertiserContentArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AdvertiserContentArticle .

:ValidSchemaAgreeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AgreeAction .

:ValidSchemaAirline a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:iataCode ],
        [ sh:node :ValidSchemaBoardingPolicyType ;
            sh:path schema1:boardingPolicy ] ;
    sh:targetClass schema1:Airline .

:ValidSchemaAllocateAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AllocateAction .

:ValidSchemaAmpStory a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AmpStory .

:ValidSchemaAmusementPark a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AmusementPark .

:ValidSchemaAnalysisNewsArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AnalysisNewsArticle .

:ValidSchemaAnimalShelter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AnimalShelter .

:ValidSchemaApartment a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:occupancy ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfRooms ] ;
    sh:targetClass schema1:Apartment .

:ValidSchemaApartmentComplex a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBoolean ] ) ;
            sh:path schema1:petsAllowed ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfAvailableAccommodationUnits ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfAccommodationUnits ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:tourBookingPage ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfBedrooms ] ;
    sh:targetClass schema1:ApartmentComplex .

:ValidSchemaAppendAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AppendAction .

:ValidSchemaApplyAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ApplyAction .

:ValidSchemaApprovedIndication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ApprovedIndication .

:ValidSchemaAquarium a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Aquarium .

:ValidSchemaArriveAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ArriveAction .

:ValidSchemaArtGallery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ArtGallery .

:ValidSchemaArtery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:arterialBranch ],
        [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:supplyTo ] ;
    sh:targetClass schema1:Artery .

:ValidSchemaAskAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuestion ;
            sh:path schema1:question ] ;
    sh:targetClass schema1:AskAction .

:ValidSchemaAskPublicNewsArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AskPublicNewsArticle .

:ValidSchemaAssessAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AssessAction .

:ValidSchemaAssignAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AssignAction .

:ValidSchemaAtlas a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Atlas .

:ValidSchemaAttorney a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Attorney .

:ValidSchemaAudioObjectSnapshot a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AudioObjectSnapshot .

:ValidSchemaAudiobook a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:readBy ] ;
    sh:targetClass schema1:Audiobook .

:ValidSchemaAuthorizeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ] ;
    sh:targetClass schema1:AuthorizeAction .

:ValidSchemaAutoBodyShop a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutoBodyShop .

:ValidSchemaAutoDealer a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutoDealer .

:ValidSchemaAutoPartsStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutoPartsStore .

:ValidSchemaAutoRental a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutoRental .

:ValidSchemaAutoRepair a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutoRepair .

:ValidSchemaAutoWash a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutoWash .

:ValidSchemaAutomatedTeller a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutomatedTeller .

:ValidSchemaAutomotiveBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AutomotiveBusiness .

:ValidSchemaBackgroundNewsArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BackgroundNewsArticle .

:ValidSchemaBakery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Bakery .

:ValidSchemaBankAccount a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:accountOverdraftLimit ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:bankAccountType ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:accountMinimumInflow ] ;
    sh:targetClass schema1:BankAccount .

:ValidSchemaBarOrPub a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BarOrPub .

:ValidSchemaBarcode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Barcode .

:ValidSchemaBeach a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Beach .

:ValidSchemaBeautySalon a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BeautySalon .

:ValidSchemaBedAndBreakfast a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BedAndBreakfast .

:ValidSchemaBefriendAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BefriendAction .

:ValidSchemaBikeStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BikeStore .

:ValidSchemaBlog a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:issn ],
        [ sh:node :ValidSchemaBlogPosting ;
            sh:path schema1:blogPost ],
        [ sh:node :ValidSchemaBlogPosting ;
            sh:path schema1:blogPosts ] ;
    sh:targetClass schema1:Blog .

:ValidSchemaBloodTest a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BloodTest .

:ValidSchemaBoatReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BoatReservation .

:ValidSchemaBoatTrip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaBoatTerminal ;
            sh:path schema1:arrivalBoatTerminal ],
        [ sh:node :ValidSchemaBoatTerminal ;
            sh:path schema1:departureBoatTerminal ] ;
    sh:targetClass schema1:BoatTrip .

:ValidSchemaBodyMeasurementTypeEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BodyMeasurementTypeEnumeration .

:ValidSchemaBodyOfWater a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BodyOfWater .

:ValidSchemaBone a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Bone .

:ValidSchemaBook a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaBookFormatType ;
            sh:path schema1:bookFormat ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:illustrator ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfPages ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:bookEdition ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:isbn ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:abridged ] ;
    sh:targetClass schema1:Book .

:ValidSchemaBookSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BookSeries .

:ValidSchemaBookStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BookStore .

:ValidSchemaBookmarkAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BookmarkAction .

:ValidSchemaBorrowAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:lender ] ;
    sh:targetClass schema1:BorrowAction .

:ValidSchemaBowlingAlley a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BowlingAlley .

:ValidSchemaBrewery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Brewery .

:ValidSchemaBridge a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Bridge .

:ValidSchemaBroadcastEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:subtitleLanguage ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:broadcastOfEvent ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isLiveBroadcast ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:videoFormat ] ;
    sh:targetClass schema1:BroadcastEvent .

:ValidSchemaBrokerageAccount a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BrokerageAccount .

:ValidSchemaBuddhistTemple a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BuddhistTemple .

:ValidSchemaBusOrCoach a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:acrissCode ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:roofLoad ] ;
    sh:targetClass schema1:BusOrCoach .

:ValidSchemaBusReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BusReservation .

:ValidSchemaBusTrip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaBusStation ] [ sh:node :ValidSchemaBusStop ] ) ;
            sh:path schema1:departureBusStop ],
        [ sh:or ( [ sh:node :ValidSchemaBusStation ] [ sh:node :ValidSchemaBusStop ] ) ;
            sh:path schema1:arrivalBusStop ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:busNumber ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:busName ] ;
    sh:targetClass schema1:BusTrip .

:ValidSchemaBusinessAudience a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfEmployees ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:yearsInOperation ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:yearlyRevenue ] ;
    sh:targetClass schema1:BusinessAudience .

:ValidSchemaBusinessEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BusinessEvent .

:ValidSchemaBuyAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaWarrantyPromise ;
            sh:path schema1:warrantyPromise ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:seller ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:vendor ] ;
    sh:targetClass schema1:BuyAction .

:ValidSchemaCafeOrCoffeeShop a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CafeOrCoffeeShop .

:ValidSchemaCampground a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Campground .

:ValidSchemaCampingPitch a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CampingPitch .

:ValidSchemaCanal a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Canal .

:ValidSchemaCancelAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CancelAction .

:ValidSchemaCar a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:acrissCode ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:roofLoad ] ;
    sh:targetClass schema1:Car .

:ValidSchemaCasino a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Casino .

:ValidSchemaCatholicChurch a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CatholicChurch .

:ValidSchemaCemetery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Cemetery .

:ValidSchemaChapter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageStart ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:pagination ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageEnd ] ;
    sh:targetClass schema1:Chapter .

:ValidSchemaCheckAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CheckAction .

:ValidSchemaCheckInAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CheckInAction .

:ValidSchemaCheckOutAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CheckOutAction .

:ValidSchemaCheckoutPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CheckoutPage .

:ValidSchemaChemicalSubstance a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDefinedTerm ;
            sh:path schema1:chemicalRole ],
        [ sh:node :ValidSchemaDefinedTerm ;
            sh:path schema1:potentialUse ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:chemicalComposition ] ;
    sh:targetClass schema1:ChemicalSubstance .

:ValidSchemaChildCare a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ChildCare .

:ValidSchemaChildrensEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ChildrensEvent .

:ValidSchemaChooseAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:actionOption ],
        [ sh:or ( [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:option ] ;
    sh:targetClass schema1:ChooseAction .

:ValidSchemaChurch a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Church .

:ValidSchemaCity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:City .

:ValidSchemaCityHall a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CityHall .

:ValidSchemaClaimReview a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:claimReviewed ] ;
    sh:targetClass schema1:ClaimReview .

:ValidSchemaClothingStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ClothingStore .

:ValidSchemaCode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Code .

:ValidSchemaCollection a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInteger ;
            sh:path schema1:collectionSize ] ;
    sh:targetClass schema1:Collection .

:ValidSchemaCollectionPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CollectionPage .

:ValidSchemaCollegeOrUniversity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CollegeOrUniversity .

:ValidSchemaComedyClub a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ComedyClub .

:ValidSchemaComedyEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ComedyEvent .

:ValidSchemaComicCoverArt a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ComicCoverArt .

:ValidSchemaComicIssue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:penciler ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:inker ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:artist ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:variantCover ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:letterer ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:colorist ] ;
    sh:targetClass schema1:ComicIssue .

:ValidSchemaComicSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ComicSeries .

:ValidSchemaComicStory a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:colorist ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:inker ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:penciler ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:letterer ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:artist ] ;
    sh:targetClass schema1:ComicStory .

:ValidSchemaCommentAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaComment ;
            sh:path schema1:resultComment ] ;
    sh:targetClass schema1:CommentAction .

:ValidSchemaCommunicateAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ],
        [ sh:node :ValidSchemaLanguage ;
            sh:path schema1:language ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:inLanguage ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:about ] ;
    sh:targetClass schema1:CommunicateAction .

:ValidSchemaCompleteDataFeed a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CompleteDataFeed .

:ValidSchemaCompoundPriceSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaUnitPriceSpecification ;
            sh:path schema1:priceComponent ],
        [ sh:or ( [ sh:node :ValidSchemaPriceTypeEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:priceType ] ;
    sh:targetClass schema1:CompoundPriceSpecification .

:ValidSchemaComputerStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ComputerStore .

:ValidSchemaConfirmAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ConfirmAction .

:ValidSchemaConsortium a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Consortium .

:ValidSchemaConstraintNode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaProperty ] ) ;
            sh:path schema1:constraintProperty ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numConstraints ] ;
    sh:targetClass schema1:ConstraintNode .

:ValidSchemaConsumeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaOffer ;
            sh:path schema1:expectsAcceptanceOf ],
        [ sh:node :ValidSchemaActionAccessSpecification ;
            sh:path schema1:actionAccessibilityRequirement ] ;
    sh:targetClass schema1:ConsumeAction .

:ValidSchemaContactPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ContactPage .

:ValidSchemaContinent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Continent .

:ValidSchemaControlAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ControlAction .

:ValidSchemaConvenienceStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ConvenienceStore .

:ValidSchemaConversation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Conversation .

:ValidSchemaCookAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaFoodEvent ;
            sh:path schema1:foodEvent ],
        [ sh:node :ValidSchemaRecipe ;
            sh:path schema1:recipe ],
        [ sh:or ( [ sh:node :ValidSchemaFoodEstablishment ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:foodEstablishment ] ;
    sh:targetClass schema1:CookAction .

:ValidSchemaCorporation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:tickerSymbol ] ;
    sh:targetClass schema1:Corporation .

:ValidSchemaCourthouse a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Courthouse .

:ValidSchemaCoverArt a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CoverArt .

:ValidSchemaCovidTestingFacility a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CovidTestingFacility .

:ValidSchemaCreateAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CreateAction .

:ValidSchemaCreditCard a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CreditCard .

:ValidSchemaCrematorium a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Crematorium .

:ValidSchemaCriticReview a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CriticReview .

:ValidSchemaCurrencyConversionService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CurrencyConversionService .

:ValidSchemaDanceEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DanceEvent .

:ValidSchemaDanceGroup a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DanceGroup .

:ValidSchemaDataType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DataType .

:ValidSchemaDatedMoneySpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ],
        [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:amount ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:currency ] ;
    sh:targetClass schema1:DatedMoneySpecification .

:ValidSchemaDaySpa a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DaySpa .

:ValidSchemaDeactivateAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DeactivateAction .

:ValidSchemaDefenceEstablishment a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DefenceEstablishment .

:ValidSchemaDeleteAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DeleteAction .

:ValidSchemaDeliveryTimeSettings a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaShippingDeliveryTime ;
            sh:path schema1:deliveryTime ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isUnlabelledFallback ],
        [ sh:node :ValidSchemaDefinedRegion ;
            sh:path schema1:shippingDestination ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:transitTimeLabel ] ;
    sh:targetClass schema1:DeliveryTimeSettings .

:ValidSchemaDentist a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Dentist .

:ValidSchemaDepartAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DepartAction .

:ValidSchemaDepartmentStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DepartmentStore .

:ValidSchemaDepositAccount a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DepositAccount .

:ValidSchemaDiagnosticLab a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalTest ;
            sh:path schema1:availableTest ] ;
    sh:targetClass schema1:DiagnosticLab .

:ValidSchemaDiagnosticProcedure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DiagnosticProcedure .

:ValidSchemaDietarySupplement a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaRecommendedDoseSchedule ;
            sh:path schema1:recommendedIntake ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:activeIngredient ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:proprietaryName ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:safetyConsideration ],
        [ sh:node :ValidSchemaMaximumDoseSchedule ;
            sh:path schema1:maximumIntake ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:targetPopulation ],
        [ sh:or ( [ sh:node :ValidSchemaDrugLegalStatus ] [ sh:node :ValidSchemaMedicalEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:legalStatus ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:nonProprietaryName ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isProprietary ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mechanismOfAction ] ;
    sh:targetClass schema1:DietarySupplement .

:ValidSchemaDigitalDocument a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDigitalDocumentPermission ;
            sh:path schema1:hasDigitalDocumentPermission ] ;
    sh:targetClass schema1:DigitalDocument .

:ValidSchemaDisagreeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DisagreeAction .

:ValidSchemaDiscoverAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DiscoverAction .

:ValidSchemaDiscussionForumPosting a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DiscussionForumPosting .

:ValidSchemaDislikeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DislikeAction .

:ValidSchemaDistillery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Distillery .

:ValidSchemaDonateAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ] ;
    sh:targetClass schema1:DonateAction .

:ValidSchemaDownloadAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DownloadAction .

:ValidSchemaDrawAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DrawAction .

:ValidSchemaDrawing a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Drawing .

:ValidSchemaDrinkAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DrinkAction .

:ValidSchemaDrugCost a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:drugUnit ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:costOrigin ],
        [ sh:node :ValidSchemaDrugCostCategory ;
            sh:path schema1:costCategory ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:costCurrency ],
        [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:applicableLocation ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQualitativeValue ] ) ;
            sh:path schema1:costPerUnit ] ;
    sh:targetClass schema1:DrugCost .

:ValidSchemaDryCleaningOrLaundry a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DryCleaningOrLaundry .

:ValidSchemaEatAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EatAction .

:ValidSchemaEducationEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:teaches ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:assesses ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:educationalLevel ] ;
    sh:targetClass schema1:EducationEvent .

:ValidSchemaEducationalAudience a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:educationalRole ] ;
    sh:targetClass schema1:EducationalAudience .

:ValidSchemaEducationalOccupationalProgram a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInteger ;
            sh:path schema1:maximumEnrollment ],
        [ sh:node :ValidSchemaMonetaryAmountDistribution ;
            sh:path schema1:salaryUponCompletion ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:timeToComplete ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEducationalOccupationalCredential ] [ sh:node :ValidSchemaAlignmentObject ] [ sh:node :ValidSchemaCourse ] ) ;
            sh:path schema1:programPrerequisites ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:programType ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEducationalOccupationalCredential ] ) ;
            sh:path schema1:occupationalCredentialAwarded ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:applicationStartDate ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ],
        [ sh:node :ValidSchemaMonetaryAmountDistribution ;
            sh:path schema1:trainingSalary ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:occupationalCategory ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:node :ValidSchemaCourse ;
            sh:path schema1:hasCourse ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:financialAidEligible ],
        [ sh:node :ValidSchemaDayOfWeek ;
            sh:path schema1:dayOfWeek ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:educationalProgramMode ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:termsPerYear ],
        [ sh:or ( [ sh:node :ValidSchemaInteger ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:typicalCreditsPerTerm ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:timeOfDay ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:applicationDeadline ],
        [ sh:or ( [ sh:node :ValidSchemaInteger ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:numberOfCredits ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:termDuration ],
        [ sh:or ( [ sh:node :ValidSchemaEducationalOccupationalCredential ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:educationalCredentialAwarded ] ;
    sh:targetClass schema1:EducationalOccupationalProgram .

:ValidSchemaElectrician a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Electrician .

:ValidSchemaElectronicsStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ElectronicsStore .

:ValidSchemaElementarySchool a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ElementarySchool .

:ValidSchemaEmailMessage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EmailMessage .

:ValidSchemaEmbassy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Embassy .

:ValidSchemaEmergencyService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EmergencyService .

:ValidSchemaEmployeeRole a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:salaryCurrency ],
        [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaPriceSpecification ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:baseSalary ] ;
    sh:targetClass schema1:EmployeeRole .

:ValidSchemaEmployerAggregateRating a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EmployerAggregateRating .

:ValidSchemaEmployerReview a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EmployerReview .

:ValidSchemaEmploymentAgency a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EmploymentAgency .

:ValidSchemaEndorseAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:endorsee ] ;
    sh:targetClass schema1:EndorseAction .

:ValidSchemaEndorsementRating a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EndorsementRating .

:ValidSchemaEnergyStarEnergyEfficiencyEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EnergyStarEnergyEfficiencyEnumeration .

:ValidSchemaEventReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EventReservation .

:ValidSchemaEventSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EventSeries .

:ValidSchemaEventVenue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EventVenue .

:ValidSchemaExchangeRateSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:exchangeRateSpread ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:currency ],
        [ sh:node :ValidSchemaUnitPriceSpecification ;
            sh:path schema1:currentExchangeRate ] ;
    sh:targetClass schema1:ExchangeRateSpecification .

:ValidSchemaExerciseAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDiet ;
            sh:path schema1:exerciseRelatedDiet ],
        [ sh:node :ValidSchemaSportsTeam ;
            sh:path schema1:sportsTeam ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:fromLocation ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:exerciseCourse ],
        [ sh:node :ValidSchemaDiet ;
            sh:path schema1:diet ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:toLocation ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:exerciseType ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:opponent ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:course ],
        [ sh:node :ValidSchemaDistance ;
            sh:path schema1:distance ],
        [ sh:node :ValidSchemaExercisePlan ;
            sh:path schema1:exercisePlan ],
        [ sh:node :ValidSchemaSportsActivityLocation ;
            sh:path schema1:sportsActivityLocation ],
        [ sh:node :ValidSchemaSportsEvent ;
            sh:path schema1:sportsEvent ] ;
    sh:targetClass schema1:ExerciseAction .

:ValidSchemaExerciseGym a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ExerciseGym .

:ValidSchemaExhibitionEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ExhibitionEvent .

:ValidSchemaFAQPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FAQPage .

:ValidSchemaFMRadioChannel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FMRadioChannel .

:ValidSchemaFastFoodRestaurant a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FastFoodRestaurant .

:ValidSchemaFestival a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Festival .

:ValidSchemaFilmAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FilmAction .

:ValidSchemaFinancialProduct a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:annualPercentageRate ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:interestRate ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:feesAndCommissionsSpecification ] ;
    sh:targetClass schema1:FinancialProduct .

:ValidSchemaFinancialService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:feesAndCommissionsSpecification ] ;
    sh:targetClass schema1:FinancialService .

:ValidSchemaFindAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FindAction .

:ValidSchemaFireStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FireStation .

:ValidSchemaFlight a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:departureTerminal ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:seller ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:flightNumber ],
        [ sh:or ( [ sh:node :ValidSchemaDuration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:estimatedFlightDuration ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mealService ],
        [ sh:node :ValidSchemaBoardingPolicyType ;
            sh:path schema1:boardingPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaVehicle ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:aircraft ],
        [ sh:node :ValidSchemaAirport ;
            sh:path schema1:arrivalAirport ],
        [ sh:node :ValidSchemaAirport ;
            sh:path schema1:departureAirport ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:flightDistance ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:arrivalGate ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:webCheckinTime ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:departureGate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:arrivalTerminal ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:carrier ] ;
    sh:targetClass schema1:Flight .

:ValidSchemaFlightReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:passengerSequenceNumber ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:securityScreening ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:boardingGroup ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQualitativeValue ] ) ;
            sh:path schema1:passengerPriorityStatus ] ;
    sh:targetClass schema1:FlightReservation .

:ValidSchemaFloat a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Float .

:ValidSchemaFlorist a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Florist .

:ValidSchemaFollowAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:followee ] ;
    sh:targetClass schema1:FollowAction .

:ValidSchemaFoodEstablishmentReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:partySize ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:endTime ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:startTime ] ;
    sh:targetClass schema1:FoodEstablishmentReservation .

:ValidSchemaFoodService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FoodService .

:ValidSchemaFundingAgency a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FundingAgency .

:ValidSchemaFundingScheme a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FundingScheme .

:ValidSchemaFurnitureStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FurnitureStore .

:ValidSchemaGame a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaPostalAddress ] ) ;
            sh:path schema1:gameLocation ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:quest ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:characterAttribute ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfPlayers ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:gameItem ] ;
    sh:targetClass schema1:Game .

:ValidSchemaGardenStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GardenStore .

:ValidSchemaGasStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GasStation .

:ValidSchemaGatedResidenceCommunity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GatedResidenceCommunity .

:ValidSchemaGeneralContractor a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GeneralContractor .

:ValidSchemaGeoCircle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDistance ] [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:geoRadius ],
        [ sh:node :ValidSchemaGeoCoordinates ;
            sh:path schema1:geoMidpoint ] ;
    sh:targetClass schema1:GeoCircle .

:ValidSchemaGiveAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ] ;
    sh:targetClass schema1:GiveAction .

:ValidSchemaGolfCourse a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GolfCourse .

:ValidSchemaGovernmentBuilding a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GovernmentBuilding .

:ValidSchemaGovernmentOffice a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GovernmentOffice .

:ValidSchemaGovernmentOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GovernmentOrganization .

:ValidSchemaGovernmentPermit a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GovernmentPermit .

:ValidSchemaGroceryStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GroceryStore .

:ValidSchemaGuide a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:reviewAspect ] ;
    sh:targetClass schema1:Guide .

:ValidSchemaHVACBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HVACBusiness .

:ValidSchemaHackathon a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Hackathon .

:ValidSchemaHairSalon a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HairSalon .

:ValidSchemaHardwareStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HardwareStore .

:ValidSchemaHealthAndBeautyBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HealthAndBeautyBusiness .

:ValidSchemaHealthClub a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HealthClub .

:ValidSchemaHealthPlanCostSharingSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanPharmacyCategory ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:healthPlanCoinsuranceRate ],
        [ sh:node :ValidSchemaPriceSpecification ;
            sh:path schema1:healthPlanCopay ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanCopayOption ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanCoinsuranceOption ] ;
    sh:targetClass schema1:HealthPlanCostSharingSpecification .

:ValidSchemaHealthTopicContent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaHealthAspectEnumeration ;
            sh:path schema1:hasHealthAspect ] ;
    sh:targetClass schema1:HealthTopicContent .

:ValidSchemaHighSchool a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HighSchool .

:ValidSchemaHinduTemple a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HinduTemple .

:ValidSchemaHobbyShop a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HobbyShop .

:ValidSchemaHomeAndConstructionBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HomeAndConstructionBusiness .

:ValidSchemaHomeGoodsStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HomeGoodsStore .

:ValidSchemaHostel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Hostel .

:ValidSchemaHotel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Hotel .

:ValidSchemaHotelRoom a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaBedType ] [ sh:node :ValidSchemaBedDetails ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:bed ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:occupancy ] ;
    sh:targetClass schema1:HotelRoom .

:ValidSchemaHouse a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfRooms ] ;
    sh:targetClass schema1:House .

:ValidSchemaHousePainter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HousePainter .

:ValidSchemaHowTo a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaItemList ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:steps ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaHowToSupply ] ) ;
            sh:path schema1:supply ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:estimatedCost ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:performTime ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:prepTime ],
        [ sh:or ( [ sh:node :ValidSchemaHowToTool ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:tool ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaHowToSection ] [ sh:node :ValidSchemaHowToStep ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:step ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:totalTime ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:yield ] ;
    sh:targetClass schema1:HowTo .

:ValidSchemaHowToDirection a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaMediaObject ] ) ;
            sh:path schema1:duringMedia ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:performTime ],
        [ sh:or ( [ sh:node :ValidSchemaHowToTool ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:tool ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:totalTime ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaMediaObject ] ) ;
            sh:path schema1:afterMedia ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaMediaObject ] ) ;
            sh:path schema1:beforeMedia ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaHowToSupply ] ) ;
            sh:path schema1:supply ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:prepTime ] ;
    sh:targetClass schema1:HowToDirection .

:ValidSchemaHowToItem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:requiredQuantity ] ;
    sh:targetClass schema1:HowToItem .

:ValidSchemaHowToTip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HowToTip .

:ValidSchemaHyperToc a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaHyperTocEntry ;
            sh:path schema1:tocEntry ],
        [ sh:node :ValidSchemaMediaObject ;
            sh:path schema1:associatedMedia ] ;
    sh:targetClass schema1:HyperToc .

:ValidSchemaIceCreamShop a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:IceCreamShop .

:ValidSchemaIgnoreAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:IgnoreAction .

:ValidSchemaImageGallery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ImageGallery .

:ValidSchemaImageObjectSnapshot a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ImageObjectSnapshot .

:ValidSchemaImagingTest a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalImagingTechnique ;
            sh:path schema1:imagingTechnique ] ;
    sh:targetClass schema1:ImagingTest .

:ValidSchemaIndividualProduct a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:serialNumber ] ;
    sh:targetClass schema1:IndividualProduct .

:ValidSchemaInfectiousDisease a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInfectiousAgentClass ;
            sh:path schema1:infectiousAgentClass ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:infectiousAgent ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:transmissionMethod ] ;
    sh:targetClass schema1:InfectiousDisease .

:ValidSchemaInformAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaEvent ;
            sh:path schema1:event ] ;
    sh:targetClass schema1:InformAction .

:ValidSchemaInsertAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPlace ;
            sh:path schema1:toLocation ] ;
    sh:targetClass schema1:InsertAction .

:ValidSchemaInstallAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:InstallAction .

:ValidSchemaInsuranceAgency a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:InsuranceAgency .

:ValidSchemaIntangible a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Intangible .

:ValidSchemaInteractAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:InteractAction .

:ValidSchemaInternetCafe a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:InternetCafe .

:ValidSchemaInvestmentFund a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:InvestmentFund .

:ValidSchemaInvestmentOrDeposit a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:amount ] ;
    sh:targetClass schema1:InvestmentOrDeposit .

:ValidSchemaInviteAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaEvent ;
            sh:path schema1:event ] ;
    sh:targetClass schema1:InviteAction .

:ValidSchemaItemPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ItemPage .

:ValidSchemaJewelryStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:JewelryStore .

:ValidSchemaJobPosting a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDate ] ) ;
            sh:path schema1:jobStartDate ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEducationalOccupationalCredential ] ) ;
            sh:path schema1:educationRequirements ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:industry ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEducationalOccupationalCredential ] ) ;
            sh:path schema1:qualifications ],
        [ sh:node :ValidSchemaOccupation ;
            sh:path schema1:relevantOccupation ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:securityClearanceRequirement ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:applicationContact ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:experienceInPlaceOfEducation ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaOccupationalExperienceRequirements ] ) ;
            sh:path schema1:experienceRequirements ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validThrough ],
        [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaPriceSpecification ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:baseSalary ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaMonetaryAmountDistribution ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:estimatedSalary ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:eligibilityToWorkRequirement ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:employmentType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:workHours ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:physicalRequirement ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:skills ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:totalJobOpenings ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:jobBenefits ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:directApply ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:responsibilities ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:benefits ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:incentiveCompensation ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:occupationalCategory ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:hiringOrganization ],
        [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:applicantLocationRequirements ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:sensoryRequirement ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:employmentUnit ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:incentives ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:datePosted ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:jobLocationType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:specialCommitments ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:salaryCurrency ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:employerOverview ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:jobImmediateStart ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:title ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:jobLocation ] ;
    sh:targetClass schema1:JobPosting .

:ValidSchemaJoinAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaEvent ;
            sh:path schema1:event ] ;
    sh:targetClass schema1:JoinAction .

:ValidSchemaJoint a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:structuralClass ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMedicalEntity ] ) ;
            sh:path schema1:functionalClass ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:biomechnicalClass ] ;
    sh:targetClass schema1:Joint .

:ValidSchemaLakeBodyOfWater a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LakeBodyOfWater .

:ValidSchemaLandform a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Landform .

:ValidSchemaLandmarksOrHistoricalBuildings a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LandmarksOrHistoricalBuildings .

:ValidSchemaLearningResource a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:competencyRequired ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:educationalUse ],
        [ sh:node :ValidSchemaAlignmentObject ;
            sh:path schema1:educationalAlignment ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:assesses ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:teaches ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:educationalLevel ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:learningResourceType ] ;
    sh:targetClass schema1:LearningResource .

:ValidSchemaLeaveAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaEvent ;
            sh:path schema1:event ] ;
    sh:targetClass schema1:LeaveAction .

:ValidSchemaLegalService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LegalService .

:ValidSchemaLegislationObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaLegalValueLevel ;
            sh:path schema1:legislationLegalValue ] ;
    sh:targetClass schema1:LegislationObject .

:ValidSchemaLegislativeBuilding a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LegislativeBuilding .

:ValidSchemaLendAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:borrower ] ;
    sh:targetClass schema1:LendAction .

:ValidSchemaLibrary a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Library .

:ValidSchemaLibrarySystem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LibrarySystem .

:ValidSchemaLifestyleModification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LifestyleModification .

:ValidSchemaLigament a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Ligament .

:ValidSchemaLikeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LikeAction .

:ValidSchemaLinkRole a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:inLanguage ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:linkRelationship ] ;
    sh:targetClass schema1:LinkRole .

:ValidSchemaLiquorStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LiquorStore .

:ValidSchemaListenAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ListenAction .

:ValidSchemaLiteraryEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LiteraryEvent .

:ValidSchemaLiveBlogPosting a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:coverageStartTime ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:coverageEndTime ],
        [ sh:node :ValidSchemaBlogPosting ;
            sh:path schema1:liveBlogUpdate ] ;
    sh:targetClass schema1:LiveBlogPosting .

:ValidSchemaLocksmith a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Locksmith .

:ValidSchemaLodgingBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBoolean ] ) ;
            sh:path schema1:petsAllowed ],
        [ sh:node :ValidSchemaRating ;
            sh:path schema1:starRating ],
        [ sh:node :ValidSchemaAudience ;
            sh:path schema1:audience ],
        [ sh:or ( [ sh:node :ValidSchemaLanguage ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:availableLanguage ],
        [ sh:or ( [ sh:node :ValidSchemaTime ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:checkoutTime ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:checkinTime ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfRooms ],
        [ sh:node :ValidSchemaLocationFeatureSpecification ;
            sh:path schema1:amenityFeature ] ;
    sh:targetClass schema1:LodgingBusiness .

:ValidSchemaLodgingReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:checkinTime ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:numChildren ],
        [ sh:or ( [ sh:node :ValidSchemaTime ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:checkoutTime ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:numAdults ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:lodgingUnitDescription ],
        [ sh:or ( [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:lodgingUnitType ] ;
    sh:targetClass schema1:LodgingReservation .

:ValidSchemaLoseAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:winner ] ;
    sh:targetClass schema1:LoseAction .

:ValidSchemaLymphaticVessel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaVessel ;
            sh:path schema1:originatesFrom ],
        [ sh:node :ValidSchemaVessel ;
            sh:path schema1:runsTo ],
        [ sh:or ( [ sh:node :ValidSchemaAnatomicalSystem ] [ sh:node :ValidSchemaAnatomicalStructure ] ) ;
            sh:path schema1:regionDrained ] ;
    sh:targetClass schema1:LymphaticVessel .

:ValidSchemaManuscript a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Manuscript .

:ValidSchemaMarryAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MarryAction .

:ValidSchemaMathSolver a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaSolveMathAction ] ) ;
            sh:path schema1:mathExpression ] ;
    sh:targetClass schema1:MathSolver .

:ValidSchemaMediaGallery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MediaGallery .

:ValidSchemaMediaReview a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:originalMediaContextDescription ],
        [ sh:node :ValidSchemaMediaManipulationRatingEnumeration ;
            sh:path schema1:mediaAuthenticityCategory ],
        [ sh:or ( [ sh:node :ValidSchemaWebPage ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaMediaObject ] ) ;
            sh:path schema1:originalMediaLink ] ;
    sh:targetClass schema1:MediaReview .

:ValidSchemaMediaReviewItem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMediaObject ;
            sh:path schema1:mediaItemAppearance ] ;
    sh:targetClass schema1:MediaReviewItem .

:ValidSchemaMedicalBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalBusiness .

:ValidSchemaMedicalCause a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:causeOf ] ;
    sh:targetClass schema1:MedicalCause .

:ValidSchemaMedicalClinic a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalSpecialty ;
            sh:path schema1:medicalSpecialty ],
        [ sh:or ( [ sh:node :ValidSchemaMedicalTherapy ] [ sh:node :ValidSchemaMedicalProcedure ] [ sh:node :ValidSchemaMedicalTest ] ) ;
            sh:path schema1:availableService ] ;
    sh:targetClass schema1:MedicalClinic .

:ValidSchemaMedicalDevicePurpose a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalDevicePurpose .

:ValidSchemaMedicalGuidelineContraindication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalGuidelineContraindication .

:ValidSchemaMedicalGuidelineRecommendation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:recommendationStrength ] ;
    sh:targetClass schema1:MedicalGuidelineRecommendation .

:ValidSchemaMedicalIndication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalIndication .

:ValidSchemaMedicalIntangible a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalIntangible .

:ValidSchemaMedicalObservationalStudy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalObservationalStudyDesign ;
            sh:path schema1:studyDesign ] ;
    sh:targetClass schema1:MedicalObservationalStudy .

:ValidSchemaMedicalOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanNetworkId ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isAcceptingNewPatients ],
        [ sh:node :ValidSchemaMedicalSpecialty ;
            sh:path schema1:medicalSpecialty ] ;
    sh:targetClass schema1:MedicalOrganization .

:ValidSchemaMedicalRiskCalculator a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalRiskCalculator .

:ValidSchemaMedicalRiskEstimator a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:estimatesRiskOf ],
        [ sh:node :ValidSchemaMedicalRiskFactor ;
            sh:path schema1:includedRiskFactor ] ;
    sh:targetClass schema1:MedicalRiskEstimator .

:ValidSchemaMedicalRiskScore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:algorithm ] ;
    sh:targetClass schema1:MedicalRiskScore .

:ValidSchemaMedicalScholarlyArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:publicationType ] ;
    sh:targetClass schema1:MedicalScholarlyArticle .

:ValidSchemaMedicalSymptom a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalSymptom .

:ValidSchemaMedicalTestPanel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalTest ;
            sh:path schema1:subTest ] ;
    sh:targetClass schema1:MedicalTestPanel .

:ValidSchemaMedicalTrial a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalTrialDesign ;
            sh:path schema1:trialDesign ] ;
    sh:targetClass schema1:MedicalTrial .

:ValidSchemaMedicalWebPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaMedicalAudience ] [ sh:node :ValidSchemaMedicalAudienceType ] ) ;
            sh:path schema1:medicalAudience ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:aspect ] ;
    sh:targetClass schema1:MedicalWebPage .

:ValidSchemaMeetingRoom a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MeetingRoom .

:ValidSchemaMensClothingStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MensClothingStore .

:ValidSchemaMessage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaDate ] ) ;
            sh:path schema1:dateRead ],
        [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:ccRecipient ],
        [ sh:or ( [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:toRecipient ],
        [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:bccRecipient ],
        [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:dateReceived ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:messageAttachment ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:dateSent ],
        [ sh:or ( [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:sender ] ;
    sh:targetClass schema1:Message .

:ValidSchemaMiddleSchool a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MiddleSchool .

:ValidSchemaMobileApplication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:carrierRequirements ] ;
    sh:targetClass schema1:MobileApplication .

:ValidSchemaMobilePhoneStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MobilePhoneStore .

:ValidSchemaMolecularEntity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:molecularFormula ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:molecularWeight ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:monoisotopicMolecularWeight ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:smiles ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:inChI ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:inChIKey ],
        [ sh:node :ValidSchemaDefinedTerm ;
            sh:path schema1:chemicalRole ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:iupacName ],
        [ sh:node :ValidSchemaDefinedTerm ;
            sh:path schema1:potentialUse ] ;
    sh:targetClass schema1:MolecularEntity .

:ValidSchemaMonetaryGrant a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:funder ],
        [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:amount ] ;
    sh:targetClass schema1:MonetaryGrant .

:ValidSchemaMoneyTransfer a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBankOrCreditUnion ] ) ;
            sh:path schema1:beneficiaryBank ],
        [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:amount ] ;
    sh:targetClass schema1:MoneyTransfer .

:ValidSchemaMortgageLoan a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:loanMortgageMandateAmount ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:domiciledMortgage ] ;
    sh:targetClass schema1:MortgageLoan .

:ValidSchemaMosque a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Mosque .

:ValidSchemaMotel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Motel .

:ValidSchemaMotorcycle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Motorcycle .

:ValidSchemaMotorcycleDealer a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MotorcycleDealer .

:ValidSchemaMotorcycleRepair a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MotorcycleRepair .

:ValidSchemaMotorizedBicycle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MotorizedBicycle .

:ValidSchemaMountain a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Mountain .

:ValidSchemaMoveAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPlace ;
            sh:path schema1:toLocation ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:fromLocation ] ;
    sh:targetClass schema1:MoveAction .

:ValidSchemaMovieClip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MovieClip .

:ValidSchemaMovieRentalStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MovieRentalStore .

:ValidSchemaMovieSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ] ;
    sh:targetClass schema1:MovieSeries .

:ValidSchemaMovieTheater a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:screenCount ] ;
    sh:targetClass schema1:MovieTheater .

:ValidSchemaMovingCompany a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MovingCompany .

:ValidSchemaMuseum a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Museum .

:ValidSchemaMusicEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MusicEvent .

:ValidSchemaMusicStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MusicStore .

:ValidSchemaMusicVenue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MusicVenue .

:ValidSchemaMusicVideoObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MusicVideoObject .

:ValidSchemaNGO a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:NGO .

:ValidSchemaNLNonprofitType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:NLNonprofitType .

:ValidSchemaNailSalon a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:NailSalon .

:ValidSchemaNewsMediaOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:masthead ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaAboutPage ] ) ;
            sh:path schema1:ownershipFundingInfo ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:missionCoveragePrioritiesPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:verificationFactCheckingPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:noBylinesPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaArticle ] ) ;
            sh:path schema1:diversityStaffingReport ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:actionableFeedbackPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:diversityPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:correctionsPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:ethicsPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:unnamedSourcesPolicy ] ;
    sh:targetClass schema1:NewsMediaOrganization .

:ValidSchemaNewspaper a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Newspaper .

:ValidSchemaNightClub a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:NightClub .

:ValidSchemaNotary a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Notary .

:ValidSchemaNoteDigitalDocument a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:NoteDigitalDocument .

:ValidSchemaOccupationalTherapy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OccupationalTherapy .

:ValidSchemaOceanBodyOfWater a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OceanBodyOfWater .

:ValidSchemaOfferForLease a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OfferForLease .

:ValidSchemaOfferForPurchase a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OfferForPurchase .

:ValidSchemaOfficeEquipmentStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OfficeEquipmentStore .

:ValidSchemaOnDemandEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OnDemandEvent .

:ValidSchemaOnlineBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OnlineBusiness .

:ValidSchemaOnlineStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OnlineStore .

:ValidSchemaOpinionNewsArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OpinionNewsArticle .

:ValidSchemaOptician a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Optician .

:ValidSchemaOrderAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:deliveryMethod ] ;
    sh:targetClass schema1:OrderAction .

:ValidSchemaOrganizationRole a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:numberedPosition ] ;
    sh:targetClass schema1:OrganizationRole .

:ValidSchemaOrganizeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OrganizeAction .

:ValidSchemaOutletStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OutletStore .

:ValidSchemaPaintAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PaintAction .

:ValidSchemaPainting a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Painting .

:ValidSchemaPalliativeProcedure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PalliativeProcedure .

:ValidSchemaParentAudience a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:childMaxAge ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:childMinAge ] ;
    sh:targetClass schema1:ParentAudience .

:ValidSchemaPark a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Park .

:ValidSchemaParkingFacility a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ParkingFacility .

:ValidSchemaPathologyTest a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:tissueSample ] ;
    sh:targetClass schema1:PathologyTest .

:ValidSchemaPatient a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:diagnosis ],
        [ sh:node :ValidSchemaDrug ;
            sh:path schema1:drug ],
        [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:healthCondition ] ;
    sh:targetClass schema1:Patient .

:ValidSchemaPawnShop a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PawnShop .

:ValidSchemaPayAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ] ;
    sh:targetClass schema1:PayAction .

:ValidSchemaPaymentCard a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:monthlyMinimumRepaymentAmount ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:floorLimit ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:contactlessPayment ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaBoolean ] ) ;
            sh:path schema1:cashBack ] ;
    sh:targetClass schema1:PaymentCard .

:ValidSchemaPaymentChargeSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPaymentMethod ;
            sh:path schema1:appliesToPaymentMethod ],
        [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:appliesToDeliveryMethod ] ;
    sh:targetClass schema1:PaymentChargeSpecification .

:ValidSchemaPaymentService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PaymentService .

:ValidSchemaPeopleAudience a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:requiredGender ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:suggestedMinAge ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:requiredMaxAge ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:suggestedMaxAge ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:requiredMinAge ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaGenderType ] ) ;
            sh:path schema1:suggestedGender ],
        [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:healthCondition ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:suggestedAge ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:suggestedMeasurement ] ;
    sh:targetClass schema1:PeopleAudience .

:ValidSchemaPerformAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaEntertainmentBusiness ;
            sh:path schema1:entertainmentBusiness ] ;
    sh:targetClass schema1:PerformAction .

:ValidSchemaPerformanceRole a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:characterName ] ;
    sh:targetClass schema1:PerformanceRole .

:ValidSchemaPerformingArtsTheater a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PerformingArtsTheater .

:ValidSchemaPerformingGroup a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PerformingGroup .

:ValidSchemaPeriodical a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Periodical .

:ValidSchemaPermit a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validFrom ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:validUntil ],
        [ sh:node :ValidSchemaService ;
            sh:path schema1:issuedThrough ],
        [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:validIn ],
        [ sh:node :ValidSchemaAudience ;
            sh:path schema1:permitAudience ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:validFor ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:issuedBy ] ;
    sh:targetClass schema1:Permit .

:ValidSchemaPetStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PetStore .

:ValidSchemaPharmacy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Pharmacy .

:ValidSchemaPhotographAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PhotographAction .

:ValidSchemaPhysicalActivity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:pathophysiology ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:epidemiology ],
        [ sh:or ( [ sh:node :ValidSchemaAnatomicalStructure ] [ sh:node :ValidSchemaSuperficialAnatomy ] [ sh:node :ValidSchemaAnatomicalSystem ] ) ;
            sh:path schema1:associatedAnatomy ] ;
    sh:targetClass schema1:PhysicalActivity .

:ValidSchemaPhysicalTherapy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PhysicalTherapy .

:ValidSchemaPhysician a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaMedicalTherapy ] [ sh:node :ValidSchemaMedicalProcedure ] [ sh:node :ValidSchemaMedicalTest ] ) ;
            sh:path schema1:availableService ],
        [ sh:node :ValidSchemaHospital ;
            sh:path schema1:hospitalAffiliation ],
        [ sh:node :ValidSchemaMedicalSpecialty ;
            sh:path schema1:medicalSpecialty ] ;
    sh:targetClass schema1:Physician .

:ValidSchemaPlaceOfWorship a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PlaceOfWorship .

:ValidSchemaPlanAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:scheduledTime ] ;
    sh:targetClass schema1:PlanAction .

:ValidSchemaPlay a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Play .

:ValidSchemaPlayAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAudience ;
            sh:path schema1:audience ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:event ] ;
    sh:targetClass schema1:PlayAction .

:ValidSchemaPlayGameAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaGameAvailabilityEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gameAvailabilityType ] ;
    sh:targetClass schema1:PlayGameAction .

:ValidSchemaPlayground a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Playground .

:ValidSchemaPlumber a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Plumber .

:ValidSchemaPodcastEpisode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PodcastEpisode .

:ValidSchemaPodcastSeason a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PodcastSeason .

:ValidSchemaPodcastSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:or ( [ sh:node :ValidSchemaDataFeed ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:webFeed ] ;
    sh:targetClass schema1:PodcastSeries .

:ValidSchemaPoliceStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PoliceStation .

:ValidSchemaPoliticalParty a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PoliticalParty .

:ValidSchemaPond a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Pond .

:ValidSchemaPostOffice a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PostOffice .

:ValidSchemaPoster a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Poster .

:ValidSchemaPreOrderAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PreOrderAction .

:ValidSchemaPrependAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PrependAction .

:ValidSchemaPreschool a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Preschool .

:ValidSchemaPresentationDigitalDocument a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PresentationDigitalDocument .

:ValidSchemaPreventionIndication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PreventionIndication .

:ValidSchemaProductCollection a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaTypeAndQuantityNode ;
            sh:path schema1:includesObject ] ;
    sh:targetClass schema1:ProductCollection .

:ValidSchemaProductReturnEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ProductReturnEnumeration .

:ValidSchemaProfessionalService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ProfessionalService .

:ValidSchemaProfilePage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ProfilePage .

:ValidSchemaProject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Project .

:ValidSchemaPronounceableText a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:phoneticText ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:speechToTextMarkup ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:textValue ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:inLanguage ] ;
    sh:targetClass schema1:PronounceableText .

:ValidSchemaPropertyValueSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:maxValue ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:readonlyValue ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:valueRequired ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:valueMaxLength ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:valueName ],
        [ sh:or ( [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:defaultValue ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:valuePattern ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:stepValue ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:minValue ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:valueMinLength ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:multipleValues ] ;
    sh:targetClass schema1:PropertyValueSpecification .

:ValidSchemaProtein a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:hasBioPolymerSequence ] ;
    sh:targetClass schema1:Protein .

:ValidSchemaPsychologicalTreatment a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PsychologicalTreatment .

:ValidSchemaPublicSwimmingPool a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PublicSwimmingPool .

:ValidSchemaPublicToilet a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PublicToilet .

:ValidSchemaPublicationIssue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:pagination ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageStart ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:issueNumber ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageEnd ] ;
    sh:targetClass schema1:PublicationIssue .

:ValidSchemaPublicationVolume a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:pagination ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:volumeNumber ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageEnd ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageStart ] ;
    sh:targetClass schema1:PublicationVolume .

:ValidSchemaQAPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:QAPage .

:ValidSchemaQuantitativeValueDistribution a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:percentile75 ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:median ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:percentile10 ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:percentile90 ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:percentile25 ] ;
    sh:targetClass schema1:QuantitativeValueDistribution .

:ValidSchemaQuantity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Quantity .

:ValidSchemaQuiz a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Quiz .

:ValidSchemaQuotation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:spokenByCharacter ] ;
    sh:targetClass schema1:Quotation .

:ValidSchemaQuoteAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:QuoteAction .

:ValidSchemaRVPark a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RVPark .

:ValidSchemaRadiationTherapy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RadiationTherapy .

:ValidSchemaRadioBroadcastService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RadioBroadcastService .

:ValidSchemaRadioChannel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RadioChannel .

:ValidSchemaRadioClip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RadioClip .

:ValidSchemaRadioEpisode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RadioEpisode .

:ValidSchemaRadioSeason a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RadioSeason .

:ValidSchemaRadioSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfEpisodes ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episode ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfSeasons ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episodes ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWorkSeason ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:season ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:containsSeason ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:seasons ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ] ;
    sh:targetClass schema1:RadioSeries .

:ValidSchemaRadioStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RadioStation .

:ValidSchemaReactAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReactAction .

:ValidSchemaReadAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReadAction .

:ValidSchemaRealEstateListing a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDuration ] ) ;
            sh:path schema1:leaseLength ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:datePosted ] ;
    sh:targetClass schema1:RealEstateListing .

:ValidSchemaReceiveAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:sender ],
        [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:deliveryMethod ] ;
    sh:targetClass schema1:ReceiveAction .

:ValidSchemaRecommendation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ] ;
    sh:targetClass schema1:Recommendation .

:ValidSchemaRecyclingCenter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RecyclingCenter .

:ValidSchemaRegisterAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RegisterAction .

:ValidSchemaRejectAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RejectAction .

:ValidSchemaRentAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaRealEstateAgent ;
            sh:path schema1:realEstateAgent ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:landlord ] ;
    sh:targetClass schema1:RentAction .

:ValidSchemaRentalCarReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPlace ;
            sh:path schema1:pickupLocation ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:dropoffLocation ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:pickupTime ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:dropoffTime ] ;
    sh:targetClass schema1:RentalCarReservation .

:ValidSchemaReplaceAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaThing ;
            sh:path schema1:replacee ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:replacer ] ;
    sh:targetClass schema1:ReplaceAction .

:ValidSchemaReplyAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaComment ;
            sh:path schema1:resultComment ] ;
    sh:targetClass schema1:ReplyAction .

:ValidSchemaReport a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:reportNumber ] ;
    sh:targetClass schema1:Report .

:ValidSchemaReportageNewsArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReportageNewsArticle .

:ValidSchemaReportedDoseSchedule a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReportedDoseSchedule .

:ValidSchemaResearchOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ResearchOrganization .

:ValidSchemaResearchProject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ResearchProject .

:ValidSchemaResearcher a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Researcher .

:ValidSchemaReservationPackage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaReservation ;
            sh:path schema1:subReservation ] ;
    sh:targetClass schema1:ReservationPackage .

:ValidSchemaReserveAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReserveAction .

:ValidSchemaReservoir a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Reservoir .

:ValidSchemaResidence a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaFloorPlan ;
            sh:path schema1:accommodationFloorPlan ] ;
    sh:targetClass schema1:Residence .

:ValidSchemaResort a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Resort .

:ValidSchemaRestaurant a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Restaurant .

:ValidSchemaResumeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ResumeAction .

:ValidSchemaReturnAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ] ;
    sh:targetClass schema1:ReturnAction .

:ValidSchemaReviewAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaReview ;
            sh:path schema1:resultReview ] ;
    sh:targetClass schema1:ReviewAction .

:ValidSchemaReviewNewsArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReviewNewsArticle .

:ValidSchemaRiverBodyOfWater a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RiverBodyOfWater .

:ValidSchemaRole a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:roleName ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:namedPosition ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ] ;
    sh:targetClass schema1:Role .

:ValidSchemaRoofingContractor a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RoofingContractor .

:ValidSchemaRoom a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Room .

:ValidSchemaRsvpAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaComment ;
            sh:path schema1:comment ],
        [ sh:node :ValidSchemaRsvpResponseType ;
            sh:path schema1:rsvpResponse ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:additionalNumberOfGuests ] ;
    sh:targetClass schema1:RsvpAction .

:ValidSchemaSaleEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SaleEvent .

:ValidSchemaSatiricalArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SatiricalArticle .

:ValidSchemaScheduleAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ScheduleAction .

:ValidSchemaScholarlyArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ScholarlyArticle .

:ValidSchemaSchool a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:School .

:ValidSchemaSchoolDistrict a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SchoolDistrict .

:ValidSchemaScreeningEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:videoFormat ],
        [ sh:node :ValidSchemaMovie ;
            sh:path schema1:workPresented ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:subtitleLanguage ] ;
    sh:targetClass schema1:ScreeningEvent .

:ValidSchemaSculpture a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Sculpture .

:ValidSchemaSeaBodyOfWater a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SeaBodyOfWater .

:ValidSchemaSearchAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:query ] ;
    sh:targetClass schema1:SearchAction .

:ValidSchemaSearchRescueOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SearchRescueOrganization .

:ValidSchemaSearchResultsPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SearchResultsPage .

:ValidSchemaSeason a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Season .

:ValidSchemaSeekToAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaHyperTocEntry ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:startOffset ] ;
    sh:targetClass schema1:SeekToAction .

:ValidSchemaSelfStorage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SelfStorage .

:ValidSchemaSellAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaWarrantyPromise ;
            sh:path schema1:warrantyPromise ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:buyer ] ;
    sh:targetClass schema1:SellAction .

:ValidSchemaSendAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:deliveryMethod ],
        [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ] ;
    sh:targetClass schema1:SendAction .

:ValidSchemaSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Series .

:ValidSchemaShareAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ShareAction .

:ValidSchemaSheetMusic a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SheetMusic .

:ValidSchemaShippingRateSettings a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDefinedRegion ;
            sh:path schema1:shippingDestination ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isUnlabelledFallback ],
        [ sh:or ( [ sh:node :ValidSchemaDeliveryChargeSpecification ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:freeShippingThreshold ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:shippingLabel ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:shippingRate ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:doesNotShip ] ;
    sh:targetClass schema1:ShippingRateSettings .

:ValidSchemaShoeStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ShoeStore .

:ValidSchemaShoppingCenter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ShoppingCenter .

:ValidSchemaShortStory a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ShortStory .

:ValidSchemaSingleFamilyResidence a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfRooms ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:occupancy ] ;
    sh:targetClass schema1:SingleFamilyResidence .

:ValidSchemaSiteNavigationElement a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SiteNavigationElement .

:ValidSchemaSkiResort a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SkiResort .

:ValidSchemaSocialEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SocialEvent .

:ValidSchemaSocialMediaPosting a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:sharedContent ] ;
    sh:targetClass schema1:SocialMediaPosting .

:ValidSchemaSoftwareSourceCode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaURL ;
            sh:path schema1:codeRepository ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:codeSampleType ],
        [ sh:or ( [ sh:node :ValidSchemaComputerLanguage ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:programmingLanguage ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:runtimePlatform ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:sampleType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:runtime ],
        [ sh:node :ValidSchemaSoftwareApplication ;
            sh:path schema1:targetProduct ] ;
    sh:targetClass schema1:SoftwareSourceCode .

:ValidSchemaSomeProducts a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:inventoryLevel ] ;
    sh:targetClass schema1:SomeProducts .

:ValidSchemaSpecialAnnouncement a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDataFeed ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:webFeed ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaWebContent ] ) ;
            sh:path schema1:diseasePreventionInfo ],
        [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaWebContent ] [ sh:node :ValidSchemaObservation ] [ sh:node :ValidSchemaDataset ] ) ;
            sh:path schema1:diseaseSpreadStatistics ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaWebContent ] ) ;
            sh:path schema1:gettingTestedInfo ],
        [ sh:node :ValidSchemaGovernmentService ;
            sh:path schema1:governmentBenefitsInfo ],
        [ sh:or ( [ sh:node :ValidSchemaLocalBusiness ] [ sh:node :ValidSchemaCivicStructure ] ) ;
            sh:path schema1:announcementLocation ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:datePosted ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaWebContent ] ) ;
            sh:path schema1:schoolClosuresInfo ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaWebContent ] ) ;
            sh:path schema1:quarantineGuidelines ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaWebContent ] ) ;
            sh:path schema1:travelBans ],
        [ sh:or ( [ sh:node :ValidSchemaWebContent ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:newsUpdatesAndGuidelines ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaWebContent ] ) ;
            sh:path schema1:publicTransportClosuresInfo ] ;
    sh:targetClass schema1:SpecialAnnouncement .

:ValidSchemaSportingGoodsStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SportingGoodsStore .

:ValidSchemaSportsClub a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SportsClub .

:ValidSchemaSportsOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:sport ] ;
    sh:targetClass schema1:SportsOrganization .

:ValidSchemaSpreadsheetDigitalDocument a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SpreadsheetDigitalDocument .

:ValidSchemaStadiumOrArena a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:StadiumOrArena .

:ValidSchemaState a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:State .

:ValidSchemaStatement a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Statement .

:ValidSchemaStatisticalPopulation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaClass ;
            sh:path schema1:populationType ] ;
    sh:targetClass schema1:StatisticalPopulation .

:ValidSchemaStatusEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:StatusEnumeration .

:ValidSchemaStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Store .

:ValidSchemaStupidType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:stupidProperty ] ;
    sh:targetClass schema1:StupidType .

:ValidSchemaSubscribeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SubscribeAction .

:ValidSchemaSubstance a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMaximumDoseSchedule ;
            sh:path schema1:maximumIntake ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:activeIngredient ] ;
    sh:targetClass schema1:Substance .

:ValidSchemaSubwayStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SubwayStation .

:ValidSchemaSuite a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfRooms ],
        [ sh:or ( [ sh:node :ValidSchemaBedType ] [ sh:node :ValidSchemaBedDetails ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:bed ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:occupancy ] ;
    sh:targetClass schema1:Suite .

:ValidSchemaSurgicalProcedure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SurgicalProcedure .

:ValidSchemaSuspendAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SuspendAction .

:ValidSchemaSynagogue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Synagogue .

:ValidSchemaTVClip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaTVSeries ;
            sh:path schema1:partOfTVSeries ] ;
    sh:targetClass schema1:TVClip .

:ValidSchemaTVEpisode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:subtitleLanguage ],
        [ sh:node :ValidSchemaCountry ;
            sh:path schema1:countryOfOrigin ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:titleEIDR ],
        [ sh:node :ValidSchemaTVSeries ;
            sh:path schema1:partOfTVSeries ] ;
    sh:targetClass schema1:TVEpisode .

:ValidSchemaTVSeason a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:titleEIDR ],
        [ sh:node :ValidSchemaTVSeries ;
            sh:path schema1:partOfTVSeries ],
        [ sh:node :ValidSchemaCountry ;
            sh:path schema1:countryOfOrigin ] ;
    sh:targetClass schema1:TVSeason .

:ValidSchemaTable a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Table .

:ValidSchemaTakeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TakeAction .

:ValidSchemaTattooParlor a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TattooParlor .

:ValidSchemaTaxi a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Taxi .

:ValidSchemaTaxiReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPlace ;
            sh:path schema1:pickupLocation ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:pickupTime ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:partySize ] ;
    sh:targetClass schema1:TaxiReservation .

:ValidSchemaTaxiService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TaxiService .

:ValidSchemaTaxiStand a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TaxiStand .

:ValidSchemaTechArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:proficiencyLevel ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:dependencies ] ;
    sh:targetClass schema1:TechArticle .

:ValidSchemaTelevisionChannel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TelevisionChannel .

:ValidSchemaTelevisionStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TelevisionStation .

:ValidSchemaTennisComplex a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TennisComplex .

:ValidSchemaTextDigitalDocument a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TextDigitalDocument .

:ValidSchemaTheaterEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TheaterEvent .

:ValidSchemaTheaterGroup a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TheaterGroup .

:ValidSchemaTherapeuticProcedure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDrug ;
            sh:path schema1:drug ],
        [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:adverseOutcome ],
        [ sh:node :ValidSchemaDoseSchedule ;
            sh:path schema1:doseSchedule ] ;
    sh:targetClass schema1:TherapeuticProcedure .

:ValidSchemaThesis a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:inSupportOf ] ;
    sh:targetClass schema1:Thesis .

:ValidSchemaTieAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TieAction .

:ValidSchemaTipAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:recipient ] ;
    sh:targetClass schema1:TipAction .

:ValidSchemaTireShop a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TireShop .

:ValidSchemaTouristDestination a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaTouristAttraction ;
            sh:path schema1:includesAttraction ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaAudience ] ) ;
            sh:path schema1:touristType ] ;
    sh:targetClass schema1:TouristDestination .

:ValidSchemaTouristInformationCenter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TouristInformationCenter .

:ValidSchemaTouristTrip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaAudience ] ) ;
            sh:path schema1:touristType ] ;
    sh:targetClass schema1:TouristTrip .

:ValidSchemaToyStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ToyStore .

:ValidSchemaTrackAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:deliveryMethod ] ;
    sh:targetClass schema1:TrackAction .

:ValidSchemaTradeAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPriceSpecification ;
            sh:path schema1:priceSpecification ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:priceCurrency ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:price ] ;
    sh:targetClass schema1:TradeAction .

:ValidSchemaTrainReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TrainReservation .

:ValidSchemaTrainTrip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:departurePlatform ],
        [ sh:node :ValidSchemaTrainStation ;
            sh:path schema1:departureStation ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:trainNumber ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:arrivalPlatform ],
        [ sh:node :ValidSchemaTrainStation ;
            sh:path schema1:arrivalStation ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:trainName ] ;
    sh:targetClass schema1:TrainTrip .

:ValidSchemaTransferAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPlace ;
            sh:path schema1:fromLocation ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:toLocation ] ;
    sh:targetClass schema1:TransferAction .

:ValidSchemaTravelAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDistance ;
            sh:path schema1:distance ] ;
    sh:targetClass schema1:TravelAction .

:ValidSchemaTravelAgency a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TravelAgency .

:ValidSchemaTreatmentIndication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TreatmentIndication .

:ValidSchemaUKNonprofitType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UKNonprofitType .

:ValidSchemaUSNonprofitType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:USNonprofitType .

:ValidSchemaUnRegisterAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UnRegisterAction .

:ValidSchemaUpdateAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaThing ;
            sh:path schema1:targetCollection ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:collection ] ;
    sh:targetClass schema1:UpdateAction .

:ValidSchemaUseAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UseAction .

:ValidSchemaUserBlocks a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserBlocks .

:ValidSchemaUserCheckins a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserCheckins .

:ValidSchemaUserComments a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:discusses ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:creator ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:commentTime ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:commentText ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:replyToUrl ] ;
    sh:targetClass schema1:UserComments .

:ValidSchemaUserDownloads a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserDownloads .

:ValidSchemaUserInteraction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserInteraction .

:ValidSchemaUserLikes a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserLikes .

:ValidSchemaUserPageVisits a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserPageVisits .

:ValidSchemaUserPlays a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserPlays .

:ValidSchemaUserPlusOnes a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserPlusOnes .

:ValidSchemaUserReview a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserReview .

:ValidSchemaUserTweets a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:UserTweets .

:ValidSchemaVacationRental a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VacationRental .

:ValidSchemaVein a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaAnatomicalSystem ] [ sh:node :ValidSchemaAnatomicalStructure ] ) ;
            sh:path schema1:regionDrained ],
        [ sh:node :ValidSchemaVessel ;
            sh:path schema1:drainsTo ],
        [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:tributary ] ;
    sh:targetClass schema1:Vein .

:ValidSchemaVeterinaryCare a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VeterinaryCare .

:ValidSchemaVideoGallery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VideoGallery .

:ValidSchemaVideoGameClip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VideoGameClip .

:ValidSchemaVideoGameSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWorkSeason ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:season ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfPlayers ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfSeasons ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:seasons ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:cheatCode ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:gameItem ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaPostalAddress ] ) ;
            sh:path schema1:gameLocation ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:containsSeason ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfEpisodes ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episodes ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:quest ],
        [ sh:node :ValidSchemaGamePlayMode ;
            sh:path schema1:playMode ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:characterAttribute ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episode ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gamePlatform ] ;
    sh:targetClass schema1:VideoGameSeries .

:ValidSchemaVideoObjectSnapshot a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VideoObjectSnapshot .

:ValidSchemaViewAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ViewAction .

:ValidSchemaVisualArtsEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VisualArtsEvent .

:ValidSchemaVisualArtwork a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:artist ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:artworkSurface ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:height ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:surface ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:depth ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:artform ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:colorist ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:inker ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:penciler ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:letterer ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:artEdition ],
        [ sh:or ( [ sh:node :ValidSchemaDistance ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:width ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:artMedium ] ;
    sh:targetClass schema1:VisualArtwork .

:ValidSchemaVitalSign a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VitalSign .

:ValidSchemaVolcano a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Volcano .

:ValidSchemaVoteAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:candidate ] ;
    sh:targetClass schema1:VoteAction .

:ValidSchemaWPAdBlock a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WPAdBlock .

:ValidSchemaWPFooter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WPFooter .

:ValidSchemaWPHeader a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WPHeader .

:ValidSchemaWPSideBar a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WPSideBar .

:ValidSchemaWantAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WantAction .

:ValidSchemaWatchAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WatchAction .

:ValidSchemaWaterfall a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Waterfall .

:ValidSchemaWearAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WearAction .

:ValidSchemaWearableMeasurementTypeEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WearableMeasurementTypeEnumeration .

:ValidSchemaWearableSizeGroupEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WearableSizeGroupEnumeration .

:ValidSchemaWearableSizeSystemEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WearableSizeSystemEnumeration .

:ValidSchemaWebAPI a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:documentation ] ;
    sh:targetClass schema1:WebAPI .

:ValidSchemaWebApplication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:browserRequirements ] ;
    sh:targetClass schema1:WebApplication .

:ValidSchemaWholesaleStore a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WholesaleStore .

:ValidSchemaWinAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:loser ] ;
    sh:targetClass schema1:WinAction .

:ValidSchemaWinery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Winery .

:ValidSchemaWorkBasedProgram a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:occupationalCategory ],
        [ sh:node :ValidSchemaMonetaryAmountDistribution ;
            sh:path schema1:trainingSalary ] ;
    sh:targetClass schema1:WorkBasedProgram .

:ValidSchemaWorkersUnion a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WorkersUnion .

:ValidSchemaWriteAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaLanguage ;
            sh:path schema1:language ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:inLanguage ] ;
    sh:targetClass schema1:WriteAction .

:ValidSchemaZoo a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Zoo .

:ValidSchemaAccommodation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBoolean ] ) ;
            sh:path schema1:petsAllowed ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:floorLevel ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accommodationCategory ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfBathroomsTotal ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:numberOfFullBathrooms ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:numberOfPartialBathrooms ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfRooms ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:floorSize ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:occupancy ],
        [ sh:node :ValidSchemaLocationFeatureSpecification ;
            sh:path schema1:amenityFeature ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:yearBuilt ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfBedrooms ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDuration ] ) ;
            sh:path schema1:leaseLength ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:tourBookingPage ],
        [ sh:node :ValidSchemaFloorPlan ;
            sh:path schema1:accommodationFloorPlan ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:permittedUsage ],
        [ sh:or ( [ sh:node :ValidSchemaBedType ] [ sh:node :ValidSchemaBedDetails ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:bed ] ;
    sh:targetClass schema1:Accommodation .

:ValidSchemaActionAccessSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:availabilityEnds ],
        [ sh:or ( [ sh:node :ValidSchemaBoolean ] [ sh:node :ValidSchemaMediaSubscription ] ) ;
            sh:path schema1:requiresSubscription ],
        [ sh:node :ValidSchemaOffer ;
            sh:path schema1:expectsAcceptanceOf ],
        [ sh:or ( [ sh:node :ValidSchemaTime ] [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:availabilityStarts ],
        [ sh:or ( [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:eligibleRegion ],
        [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] ) ;
            sh:path schema1:ineligibleRegion ] ;
    sh:targetClass schema1:ActionAccessSpecification .

:ValidSchemaActionStatusType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ActionStatusType .

:ValidSchemaArchiveComponent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaArchiveOrganization ;
            sh:path schema1:holdingArchive ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:itemLocation ] ;
    sh:targetClass schema1:ArchiveComponent .

:ValidSchemaArchiveOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaArchiveComponent ;
            sh:path schema1:archiveHeld ] ;
    sh:targetClass schema1:ArchiveOrganization .

:ValidSchemaAudioObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:transcript ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:embeddedTextCaption ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMediaObject ] ) ;
            sh:path schema1:caption ] ;
    sh:targetClass schema1:AudioObject .

:ValidSchemaBankOrCreditUnion a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BankOrCreditUnion .

:ValidSchemaBookFormatType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BookFormatType .

:ValidSchemaBrainStructure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BrainStructure .

:ValidSchemaBreadcrumbList a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BreadcrumbList .

:ValidSchemaBroadcastChannel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaBroadcastService ;
            sh:path schema1:providesBroadcastService ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:genre ],
        [ sh:node :ValidSchemaCableOrSatelliteService ;
            sh:path schema1:inBroadcastLineup ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:broadcastChannelId ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:broadcastServiceTier ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBroadcastFrequencySpecification ] ) ;
            sh:path schema1:broadcastFrequency ] ;
    sh:targetClass schema1:BroadcastChannel .

:ValidSchemaCDCPMDRecord a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumC19OverflowPats ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumBedsOcc ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumBeds ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:cvdFacilityCounty ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumICUBeds ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumC19MechVentPats ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumC19HospPats ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumC19OFMechVentPats ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:cvdCollectionDate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:cvdFacilityId ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumC19HOPats ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumTotBeds ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumICUBedsOcc ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumC19Died ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:datePosted ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumVent ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:cvdNumVentUse ] ;
    sh:targetClass schema1:CDCPMDRecord .

:ValidSchemaCableOrSatelliteService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CableOrSatelliteService .

:ValidSchemaCarUsageType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CarUsageType .

:ValidSchemaCategoryCodeSet a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaCategoryCode ;
            sh:path schema1:hasCategoryCode ] ;
    sh:targetClass schema1:CategoryCodeSet .

:ValidSchemaCivicStructure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:openingHours ] ;
    sh:targetClass schema1:CivicStructure .

:ValidSchemaComputerLanguage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ComputerLanguage .

:ValidSchemaContactPointOption a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ContactPointOption .

:ValidSchemaCorrectionComment a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CorrectionComment .

:ValidSchemaCourseInstance a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:courseMode ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:courseWorkload ],
        [ sh:node :ValidSchemaSchedule ;
            sh:path schema1:courseSchedule ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:instructor ] ;
    sh:targetClass schema1:CourseInstance .

:ValidSchemaDDxElement a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalSignOrSymptom ;
            sh:path schema1:distinguishingSign ],
        [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:diagnosis ] ;
    sh:targetClass schema1:DDxElement .

:ValidSchemaDataDownload a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementMethod ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementTechnique ] ;
    sh:targetClass schema1:DataDownload .

:ValidSchemaDataFeedItem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:dateCreated ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:item ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:dateModified ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:dateDeleted ] ;
    sh:targetClass schema1:DataFeedItem .

:ValidSchemaDefinedTermSet a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDefinedTerm ;
            sh:path schema1:hasDefinedTerm ] ;
    sh:targetClass schema1:DefinedTermSet .

:ValidSchemaDeliveryChargeSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:areaServed ],
        [ sh:or ( [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:eligibleRegion ],
        [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:appliesToDeliveryMethod ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] ) ;
            sh:path schema1:ineligibleRegion ] ;
    sh:targetClass schema1:DeliveryChargeSpecification .

:ValidSchemaDeliveryEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:accessCode ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:availableFrom ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:availableThrough ],
        [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:hasDeliveryMethod ] ;
    sh:targetClass schema1:DeliveryEvent .

:ValidSchemaDigitalDocumentPermission a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDigitalDocumentPermissionType ;
            sh:path schema1:permissionType ],
        [ sh:or ( [ sh:node :ValidSchemaAudience ] [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:grantee ] ;
    sh:targetClass schema1:DigitalDocumentPermission .

:ValidSchemaDigitalDocumentPermissionType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DigitalDocumentPermissionType .

:ValidSchemaDigitalPlatformEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DigitalPlatformEnumeration .

:ValidSchemaDriveWheelConfigurationValue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DriveWheelConfigurationValue .

:ValidSchemaDrugClass a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDrug ;
            sh:path schema1:drug ] ;
    sh:targetClass schema1:DrugClass .

:ValidSchemaDrugCostCategory a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DrugCostCategory .

:ValidSchemaDrugPregnancyCategory a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DrugPregnancyCategory .

:ValidSchemaDrugPrescriptionStatus a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DrugPrescriptionStatus .

:ValidSchemaDrugStrength a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:availableIn ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:activeIngredient ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:strengthValue ],
        [ sh:node :ValidSchemaMaximumDoseSchedule ;
            sh:path schema1:maximumIntake ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:strengthUnit ] ;
    sh:targetClass schema1:DrugStrength .

:ValidSchemaEducationalOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:alumni ] ;
    sh:targetClass schema1:EducationalOrganization .

:ValidSchemaEnergyConsumptionDetails a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaEUEnergyEfficiencyEnumeration ;
            sh:path schema1:energyEfficiencyScaleMax ],
        [ sh:node :ValidSchemaEnergyEfficiencyEnumeration ;
            sh:path schema1:hasEnergyEfficiencyCategory ],
        [ sh:node :ValidSchemaEUEnergyEfficiencyEnumeration ;
            sh:path schema1:energyEfficiencyScaleMin ] ;
    sh:targetClass schema1:EnergyConsumptionDetails .

:ValidSchemaEnergyEfficiencyEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EnergyEfficiencyEnumeration .

:ValidSchemaEngineSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQualitativeValue ] ) ;
            sh:path schema1:engineType ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:enginePower ],
        [ sh:or ( [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:fuelType ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:torque ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:engineDisplacement ] ;
    sh:targetClass schema1:EngineSpecification .

:ValidSchemaEntertainmentBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EntertainmentBusiness .

:ValidSchemaEntryPoint a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaSoftwareApplication ;
            sh:path schema1:application ],
        [ sh:node :ValidSchemaSoftwareApplication ;
            sh:path schema1:actionApplication ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:encodingType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:contentType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:httpMethod ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDigitalPlatformEnumeration ] ) ;
            sh:path schema1:actionPlatform ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:urlTemplate ] ;
    sh:targetClass schema1:EntryPoint .

:ValidSchemaEventAttendanceModeEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EventAttendanceModeEnumeration .

:ValidSchemaExercisePlan a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:additionalVariable ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaEnergy ] ) ;
            sh:path schema1:workload ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:restPeriods ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:repetitions ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:activityFrequency ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDuration ] ) ;
            sh:path schema1:activityDuration ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:exerciseType ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:intensity ] ;
    sh:targetClass schema1:ExercisePlan .

:ValidSchemaFoodEstablishment a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaRating ;
            sh:path schema1:starRating ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaMenu ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:menu ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:servesCuisine ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBoolean ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:acceptsReservations ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaMenu ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:hasMenu ] ;
    sh:targetClass schema1:FoodEstablishment .

:ValidSchemaFoodEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:FoodEvent .

:ValidSchemaGameAvailabilityEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GameAvailabilityEnumeration .

:ValidSchemaGameServer a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaVideoGame ;
            sh:path schema1:game ],
        [ sh:node :ValidSchemaGameServerStatus ;
            sh:path schema1:serverStatus ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:playersOnline ] ;
    sh:targetClass schema1:GameServer .

:ValidSchemaGameServerStatus a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GameServerStatus .

:ValidSchemaGovernmentBenefitsType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GovernmentBenefitsType .

:ValidSchemaGovernmentService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaAdministrativeArea ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:jurisdiction ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:serviceOperator ] ;
    sh:targetClass schema1:GovernmentService .

:ValidSchemaHealthAspectEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HealthAspectEnumeration .

:ValidSchemaHealthInsurancePlan a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanDrugOption ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:benefitsSummaryUrl ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:contactPoint ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:healthPlanMarketingUrl ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanDrugTier ],
        [ sh:node :ValidSchemaHealthPlanFormulary ;
            sh:path schema1:includesHealthPlanFormulary ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanId ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:usesHealthPlanIdStandard ],
        [ sh:node :ValidSchemaHealthPlanNetwork ;
            sh:path schema1:includesHealthPlanNetwork ] ;
    sh:targetClass schema1:HealthInsurancePlan .

:ValidSchemaHealthPlanFormulary a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:healthPlanCostSharing ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanDrugTier ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:offersPrescriptionByMail ] ;
    sh:targetClass schema1:HealthPlanFormulary .

:ValidSchemaHealthPlanNetwork a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanNetworkTier ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:healthPlanCostSharing ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:healthPlanNetworkId ] ;
    sh:targetClass schema1:HealthPlanNetwork .

:ValidSchemaHospital a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDataset ] [ sh:node :ValidSchemaCDCPMDRecord ] ) ;
            sh:path schema1:healthcareReportingData ],
        [ sh:or ( [ sh:node :ValidSchemaMedicalTherapy ] [ sh:node :ValidSchemaMedicalProcedure ] [ sh:node :ValidSchemaMedicalTest ] ) ;
            sh:path schema1:availableService ],
        [ sh:node :ValidSchemaMedicalSpecialty ;
            sh:path schema1:medicalSpecialty ] ;
    sh:targetClass schema1:Hospital .

:ValidSchemaHowToSection a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaItemList ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:steps ] ;
    sh:targetClass schema1:HowToSection .

:ValidSchemaHowToStep a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HowToStep .

:ValidSchemaInfectiousAgentClass a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:InfectiousAgentClass .

:ValidSchemaInvoice a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaPriceSpecification ] ) ;
            sh:path schema1:totalPaymentDue ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:scheduledPaymentDate ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:customer ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:broker ],
        [ sh:node :ValidSchemaOrder ;
            sh:path schema1:referencesOrder ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:confirmationNumber ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accountId ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:billingPeriod ],
        [ sh:node :ValidSchemaPaymentMethod ;
            sh:path schema1:paymentMethod ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:paymentDueDate ],
        [ sh:or ( [ sh:node :ValidSchemaPaymentStatusType ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:paymentStatus ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:paymentMethodId ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaPriceSpecification ] ) ;
            sh:path schema1:minimumPaymentDue ],
        [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:paymentDue ] ;
    sh:targetClass schema1:Invoice .

:ValidSchemaItemListOrderType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ItemListOrderType .

:ValidSchemaLegalForceStatus a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LegalForceStatus .

:ValidSchemaLegalValueLevel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:LegalValueLevel .

:ValidSchemaLocalBusiness a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:priceRange ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:currenciesAccepted ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:paymentAccepted ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:branchOf ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:openingHours ] ;
    sh:targetClass schema1:LocalBusiness .

:ValidSchemaMap a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMapCategoryType ;
            sh:path schema1:mapType ] ;
    sh:targetClass schema1:Map .

:ValidSchemaMapCategoryType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MapCategoryType .

:ValidSchemaMediaManipulationRatingEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MediaManipulationRatingEnumeration .

:ValidSchemaMedicalAudience a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalAudience .

:ValidSchemaMedicalAudienceType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalAudienceType .

:ValidSchemaMedicalCode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:codingSystem ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:codeValue ] ;
    sh:targetClass schema1:MedicalCode .

:ValidSchemaMedicalConditionStage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:subStageSuffix ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:stageAsNumber ] ;
    sh:targetClass schema1:MedicalConditionStage .

:ValidSchemaMedicalDevice a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:adverseOutcome ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:procedure ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postOp ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMedicalContraindication ] ) ;
            sh:path schema1:contraindication ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:preOp ],
        [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:seriousAdverseOutcome ] ;
    sh:targetClass schema1:MedicalDevice .

:ValidSchemaMedicalEvidenceLevel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalEvidenceLevel .

:ValidSchemaMedicalGuideline a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalEvidenceLevel ;
            sh:path schema1:evidenceLevel ],
        [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:guidelineSubject ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:evidenceOrigin ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:guidelineDate ] ;
    sh:targetClass schema1:MedicalGuideline .

:ValidSchemaMedicalImagingTechnique a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalImagingTechnique .

:ValidSchemaMedicalObservationalStudyDesign a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalObservationalStudyDesign .

:ValidSchemaMedicalProcedureType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalProcedureType .

:ValidSchemaMedicalSign a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalTest ;
            sh:path schema1:identifyingTest ],
        [ sh:node :ValidSchemaPhysicalExam ;
            sh:path schema1:identifyingExam ] ;
    sh:targetClass schema1:MedicalSign .

:ValidSchemaMedicalStudy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:studySubject ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:sponsor ],
        [ sh:or ( [ sh:node :ValidSchemaEventStatusType ] [ sh:node :ValidSchemaMedicalStudyStatus ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:status ],
        [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:healthCondition ],
        [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:studyLocation ] ;
    sh:targetClass schema1:MedicalStudy .

:ValidSchemaMedicalTrialDesign a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalTrialDesign .

:ValidSchemaMedicineSystem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicineSystem .

:ValidSchemaMerchantReturnPolicySeasonalOverride a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:merchantReturnDays ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ],
        [ sh:node :ValidSchemaMerchantReturnEnumeration ;
            sh:path schema1:returnPolicyCategory ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ] ;
    sh:targetClass schema1:MerchantReturnPolicySeasonalOverride .

:ValidSchemaMovie a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaCountry ;
            sh:path schema1:countryOfOrigin ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:subtitleLanguage ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:titleEIDR ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ] ;
    sh:targetClass schema1:Movie .

:ValidSchemaMusicAlbumProductionType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MusicAlbumProductionType .

:ValidSchemaMusicAlbumReleaseType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MusicAlbumReleaseType .

:ValidSchemaMusicPlaylist a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaMusicRecording ] [ sh:node :ValidSchemaItemList ] ) ;
            sh:path schema1:track ],
        [ sh:node :ValidSchemaMusicRecording ;
            sh:path schema1:tracks ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numTracks ] ;
    sh:targetClass schema1:MusicPlaylist .

:ValidSchemaMusicRelease a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMusicReleaseFormatType ;
            sh:path schema1:musicReleaseFormat ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:catalogNumber ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:recordLabel ],
        [ sh:node :ValidSchemaMusicAlbum ;
            sh:path schema1:releaseOf ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:creditedTo ] ;
    sh:targetClass schema1:MusicRelease .

:ValidSchemaMusicReleaseFormatType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MusicReleaseFormatType .

:ValidSchemaNerve a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaSuperficialAnatomy ] [ sh:node :ValidSchemaAnatomicalStructure ] ) ;
            sh:path schema1:sensoryUnit ],
        [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:branch ],
        [ sh:node :ValidSchemaBrainStructure ;
            sh:path schema1:sourcedFrom ],
        [ sh:node :ValidSchemaMuscle ;
            sh:path schema1:nerveMotor ] ;
    sh:targetClass schema1:Nerve .

:ValidSchemaNewsArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:printEdition ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:printColumn ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:printSection ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:dateline ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:printPage ] ;
    sh:targetClass schema1:NewsArticle .

:ValidSchemaNonprofitType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:NonprofitType .

:ValidSchemaObservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:observationPeriod ],
        [ sh:node :ValidSchemaProperty ;
            sh:path schema1:measuredProperty ],
        [ sh:or ( [ sh:node :ValidSchemaProperty ] [ sh:node :ValidSchemaStatisticalVariable ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPropertyValue ] ) ;
            sh:path schema1:variableMeasured ],
        [ sh:node :ValidSchemaEnumeration ;
            sh:path schema1:measurementQualifier ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementTechnique ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:marginOfError ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:observationDate ],
        [ sh:or ( [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:observationAbout ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementMethod ],
        [ sh:node :ValidSchemaStatisticalVariable ;
            sh:path schema1:measurementDenominator ] ;
    sh:targetClass schema1:Observation .

:ValidSchemaOfferShippingDetails a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:depth ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:shippingLabel ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:doesNotShip ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:height ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:transitTimeLabel ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:shippingSettingsLink ],
        [ sh:node :ValidSchemaShippingDeliveryTime ;
            sh:path schema1:deliveryTime ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:shippingRate ],
        [ sh:or ( [ sh:node :ValidSchemaDistance ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:width ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:weight ],
        [ sh:node :ValidSchemaDefinedRegion ;
            sh:path schema1:shippingDestination ],
        [ sh:node :ValidSchemaDefinedRegion ;
            sh:path schema1:shippingOrigin ] ;
    sh:targetClass schema1:OfferShippingDetails .

:ValidSchemaPaymentStatusType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PaymentStatusType .

:ValidSchemaPhysicalExam a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PhysicalExam .

:ValidSchemaPostalCodeRangeSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:postalCodeBegin ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postalCodeEnd ] ;
    sh:targetClass schema1:PostalCodeRangeSpecification .

:ValidSchemaPriceComponentTypeEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PriceComponentTypeEnumeration .

:ValidSchemaQuestion a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaAnswer ] [ sh:node :ValidSchemaItemList ] ) ;
            sh:path schema1:acceptedAnswer ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:answerCount ],
        [ sh:or ( [ sh:node :ValidSchemaAnswer ] [ sh:node :ValidSchemaItemList ] ) ;
            sh:path schema1:suggestedAnswer ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:eduQuestionType ] ;
    sh:targetClass schema1:Question .

:ValidSchemaRealEstateAgent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RealEstateAgent .

:ValidSchemaRecipe a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:cookingMethod ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:recipeIngredient ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:ingredients ],
        [ sh:node :ValidSchemaRestrictedDiet ;
            sh:path schema1:suitableForDiet ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:recipeCategory ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:cookTime ],
        [ sh:node :ValidSchemaNutritionInformation ;
            sh:path schema1:nutrition ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaItemList ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:recipeInstructions ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:recipeCuisine ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:recipeYield ] ;
    sh:targetClass schema1:Recipe .

:ValidSchemaRecommendedDoseSchedule a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RecommendedDoseSchedule .

:ValidSchemaRefundTypeEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RefundTypeEnumeration .

:ValidSchemaRepaymentSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:loanPaymentAmount ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:loanPaymentFrequency ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:downPayment ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:numberOfLoanPayments ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:earlyPrepaymentPenalty ] ;
    sh:targetClass schema1:RepaymentSpecification .

:ValidSchemaReservation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaTicket ;
            sh:path schema1:reservedTicket ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:bookingAgent ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:broker ],
        [ sh:node :ValidSchemaProgramMembership ;
            sh:path schema1:programMembershipUsed ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:reservationFor ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:modifiedTime ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:priceCurrency ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaPriceSpecification ] ) ;
            sh:path schema1:totalPrice ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:reservationId ],
        [ sh:node :ValidSchemaReservationStatusType ;
            sh:path schema1:reservationStatus ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:underName ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:bookingTime ] ;
    sh:targetClass schema1:Reservation .

:ValidSchemaReservationStatusType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReservationStatusType .

:ValidSchemaReturnMethodEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReturnMethodEnumeration .

:ValidSchemaRsvpResponseType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RsvpResponseType .

:ValidSchemaSeat a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:seatSection ],
        [ sh:or ( [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:seatingType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:seatRow ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:seatNumber ] ;
    sh:targetClass schema1:Seat .

:ValidSchemaServiceChannel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaURL ;
            sh:path schema1:serviceUrl ],
        [ sh:node :ValidSchemaPostalAddress ;
            sh:path schema1:servicePostalAddress ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:serviceLocation ],
        [ sh:or ( [ sh:node :ValidSchemaLanguage ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:availableLanguage ],
        [ sh:node :ValidSchemaService ;
            sh:path schema1:providesService ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:processingTime ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:serviceSmsNumber ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:servicePhone ] ;
    sh:targetClass schema1:ServiceChannel .

:ValidSchemaSizeGroupEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SizeGroupEnumeration .

:ValidSchemaSizeSystemEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SizeSystemEnumeration .

:ValidSchemaSolveMathAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:eduQuestionType ] ;
    sh:targetClass schema1:SolveMathAction .

:ValidSchemaSpecialty a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Specialty .

:ValidSchemaSportsActivityLocation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SportsActivityLocation .

:ValidSchemaSportsEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaSportsTeam ] ) ;
            sh:path schema1:competitor ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:sport ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaSportsTeam ] ) ;
            sh:path schema1:homeTeam ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaSportsTeam ] ) ;
            sh:path schema1:awayTeam ] ;
    sh:targetClass schema1:SportsEvent .

:ValidSchemaSteeringPositionValue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:SteeringPositionValue .

:ValidSchemaSyllabus a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Syllabus .

:ValidSchemaTextObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TextObject .

:ValidSchemaTicket a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaPriceSpecification ] ) ;
            sh:path schema1:totalPrice ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:priceCurrency ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:ticketNumber ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:ticketToken ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaDate ] ) ;
            sh:path schema1:dateIssued ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:issuedBy ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:underName ],
        [ sh:node :ValidSchemaSeat ;
            sh:path schema1:ticketedSeat ] ;
    sh:targetClass schema1:Ticket .

:ValidSchemaTouristAttraction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaLanguage ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:availableLanguage ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaAudience ] ) ;
            sh:path schema1:touristType ] ;
    sh:targetClass schema1:TouristAttraction .

:ValidSchemaVehicle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:meetsEmissionStandard ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:fuelCapacity ],
        [ sh:node :ValidSchemaSteeringPositionValue ;
            sh:path schema1:steeringPosition ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:vehicleSeatingCapacity ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:emissionsCO2 ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:fuelEfficiency ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:vehicleIdentificationNumber ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:weightTotal ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:numberOfForwardGears ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:speed ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:vehicleTransmission ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:vehicleInteriorColor ],
        [ sh:or ( [ sh:node :ValidSchemaCarUsageType ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:vehicleSpecialUsage ],
        [ sh:or ( [ sh:node :ValidSchemaDriveWheelConfigurationValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:driveWheelConfiguration ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:callSign ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:modelDate ],
        [ sh:or ( [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:fuelType ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:wheelbase ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:purchaseDate ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:accelerationTime ],
        [ sh:node :ValidSchemaEngineSpecification ;
            sh:path schema1:vehicleEngine ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:mileageFromOdometer ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:stupidProperty ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:seatingCapacity ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:cargoVolume ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:vehicleInteriorType ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:vehicleModelDate ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:numberOfAirbags ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:numberOfPreviousOwners ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQualitativeValue ] ) ;
            sh:path schema1:bodyType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:vehicleConfiguration ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfAxles ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:dateVehicleFirstRegistered ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:knownVehicleDamages ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:payload ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:productionDate ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfDoors ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:tongueWeight ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:fuelConsumption ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:trailerWeight ] ;
    sh:targetClass schema1:Vehicle .

:ValidSchemaVideoGame a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaGameServer ;
            sh:path schema1:gameServer ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:cheatCode ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:gameTip ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gamePlatform ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaGamePlayMode ;
            sh:path schema1:playMode ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gameEdition ] ;
    sh:targetClass schema1:VideoGame .

:ValidSchemaWarrantyScope a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WarrantyScope .

:ValidSchemaWebPageElement a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaXPathType ;
            sh:path schema1:xpath ],
        [ sh:node :ValidSchemaCssSelectorType ;
            sh:path schema1:cssSelector ] ;
    sh:targetClass schema1:WebPageElement .

:ValidSchemaWebSite a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:issn ] ;
    sh:targetClass schema1:WebSite .

:ValidSchemaAboutPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AboutPage .

:ValidSchemaAction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:endTime ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:object ],
        [ sh:node :ValidSchemaActionStatusType ;
            sh:path schema1:actionStatus ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaEntryPoint ] ) ;
            sh:path schema1:target ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:participant ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:startTime ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:agent ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaVirtualLocation ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:location ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:result ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:instrument ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:error ] ;
    sh:targetClass schema1:Action .

:ValidSchemaAdultOrientedEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AdultOrientedEnumeration .

:ValidSchemaAggregateOffer a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:lowPrice ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:offerCount ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:highPrice ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ] ;
    sh:targetClass schema1:AggregateOffer .

:ValidSchemaAirport a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:icaoCode ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:iataCode ] ;
    sh:targetClass schema1:Airport .

:ValidSchemaAnswer a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaComment ] [ sh:node :ValidSchemaWebContent ] ) ;
            sh:path schema1:answerExplanation ] ;
    sh:targetClass schema1:Answer .

:ValidSchemaArticle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:articleSection ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:pagination ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:backstory ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageEnd ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:pageStart ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:wordCount ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:articleBody ],
        [ sh:or ( [ sh:node :ValidSchemaSpeakableSpecification ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:speakable ] ;
    sh:targetClass schema1:Article .

:ValidSchemaBoardingPolicyType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BoardingPolicyType .

:ValidSchemaBoatTerminal a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BoatTerminal .

:ValidSchemaBroadcastFrequencySpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaQualitativeValue ] ) ;
            sh:path schema1:broadcastSignalModulation ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:broadcastFrequencyValue ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:broadcastSubChannel ] ;
    sh:targetClass schema1:BroadcastFrequencySpecification .

:ValidSchemaBusStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BusStation .

:ValidSchemaBusStop a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BusStop .

:ValidSchemaBusinessEntityType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BusinessEntityType .

:ValidSchemaClaim a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:firstAppearance ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:appearance ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:claimInterpreter ] ;
    sh:targetClass schema1:Claim .

:ValidSchemaClip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaHyperTocEntry ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:endOffset ],
        [ sh:or ( [ sh:node :ValidSchemaHyperTocEntry ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:startOffset ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:partOfSeason ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaCreativeWorkSeries ;
            sh:path schema1:partOfSeries ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:clipNumber ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:partOfEpisode ] ;
    sh:targetClass schema1:Clip .

:ValidSchemaCssSelectorType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:CssSelectorType .

:ValidSchemaDiet a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:endorsers ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:physiologicalBenefits ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:risks ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:dietFeatures ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:expertConsiderations ] ;
    sh:targetClass schema1:Diet .

:ValidSchemaDoseSchedule a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:frequency ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:doseUnit ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:targetPopulation ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaQualitativeValue ] ) ;
            sh:path schema1:doseValue ] ;
    sh:targetClass schema1:DoseSchedule .

:ValidSchemaEUEnergyEfficiencyEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EUEnergyEfficiencyEnumeration .

:ValidSchemaEnergy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Energy .

:ValidSchemaFloorPlan a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfBedrooms ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfAvailableAccommodationUnits ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfAccommodationUnits ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:floorSize ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaImageObject ] ) ;
            sh:path schema1:layoutImage ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:numberOfRooms ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:numberOfFullBathrooms ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:numberOfPartialBathrooms ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBoolean ] ) ;
            sh:path schema1:petsAllowed ],
        [ sh:node :ValidSchemaLocationFeatureSpecification ;
            sh:path schema1:amenityFeature ],
        [ sh:node :ValidSchemaAccommodation ;
            sh:path schema1:isPlanForApartment ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfBathroomsTotal ] ;
    sh:targetClass schema1:FloorPlan .

:ValidSchemaGamePlayMode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GamePlayMode .

:ValidSchemaGene a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:hasBioPolymerSequence ],
        [ sh:or ( [ sh:node :ValidSchemaAnatomicalSystem ] [ sh:node :ValidSchemaBioChemEntity ] [ sh:node :ValidSchemaAnatomicalStructure ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:expressedIn ],
        [ sh:node :ValidSchemaBioChemEntity ;
            sh:path schema1:encodesBioChemEntity ],
        [ sh:node :ValidSchemaGene ;
            sh:path schema1:alternativeOf ] ;
    sh:targetClass schema1:Gene .

:ValidSchemaGeoCoordinates a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:latitude ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:longitude ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:address ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postalCode ],
        [ sh:or ( [ sh:node :ValidSchemaCountry ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:addressCountry ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:elevation ] ;
    sh:targetClass schema1:GeoCoordinates .

:ValidSchemaHowToSupply a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:estimatedCost ] ;
    sh:targetClass schema1:HowToSupply .

:ValidSchemaHowToTool a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:HowToTool .

:ValidSchemaItemAvailability a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ItemAvailability .

:ValidSchemaLoanOrCredit a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:loanTerm ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:loanType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:currency ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:gracePeriod ],
        [ sh:or ( [ sh:node :ValidSchemaMonetaryAmount ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:amount ],
        [ sh:node :ValidSchemaRepaymentSpecification ;
            sh:path schema1:loanRepaymentForm ],
        [ sh:or ( [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:requiredCollateral ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:renegotiableLoan ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:recourseLoan ] ;
    sh:targetClass schema1:LoanOrCredit .

:ValidSchemaMediaSubscription a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:authenticator ],
        [ sh:node :ValidSchemaOffer ;
            sh:path schema1:expectsAcceptanceOf ] ;
    sh:targetClass schema1:MediaSubscription .

:ValidSchemaMedicalContraindication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalContraindication .

:ValidSchemaMedicalRiskFactor a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:increasesRiskOf ] ;
    sh:targetClass schema1:MedicalRiskFactor .

:ValidSchemaMedicalSignOrSymptom a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:possibleTreatment ] ;
    sh:targetClass schema1:MedicalSignOrSymptom .

:ValidSchemaMenu a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMenuItem ;
            sh:path schema1:hasMenuItem ],
        [ sh:node :ValidSchemaMenuSection ;
            sh:path schema1:hasMenuSection ] ;
    sh:targetClass schema1:Menu .

:ValidSchemaMerchantReturnEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MerchantReturnEnumeration .

:ValidSchemaMuscle a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:insertion ],
        [ sh:node :ValidSchemaVessel ;
            sh:path schema1:bloodSupply ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:muscleAction ],
        [ sh:node :ValidSchemaMuscle ;
            sh:path schema1:antagonist ],
        [ sh:node :ValidSchemaNerve ;
            sh:path schema1:nerve ] ;
    sh:targetClass schema1:Muscle .

:ValidSchemaNutritionInformation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMass ;
            sh:path schema1:sugarContent ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:cholesterolContent ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:fiberContent ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:transFatContent ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:proteinContent ],
        [ sh:node :ValidSchemaEnergy ;
            sh:path schema1:calories ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:unsaturatedFatContent ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:saturatedFatContent ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:fatContent ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:servingSize ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:sodiumContent ],
        [ sh:node :ValidSchemaMass ;
            sh:path schema1:carbohydrateContent ] ;
    sh:targetClass schema1:NutritionInformation .

:ValidSchemaOccupation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaMonetaryAmountDistribution ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:estimatedSalary ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:skills ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEducationalOccupationalCredential ] ) ;
            sh:path schema1:qualifications ],
        [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:occupationLocation ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEducationalOccupationalCredential ] ) ;
            sh:path schema1:educationRequirements ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:responsibilities ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaOccupationalExperienceRequirements ] ) ;
            sh:path schema1:experienceRequirements ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:occupationalCategory ] ;
    sh:targetClass schema1:Occupation .

:ValidSchemaOccupationalExperienceRequirements a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:monthsOfExperience ] ;
    sh:targetClass schema1:OccupationalExperienceRequirements .

:ValidSchemaOrder a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaURL ;
            sh:path schema1:paymentUrl ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:paymentDue ],
        [ sh:node :ValidSchemaParcelDelivery ;
            sh:path schema1:orderDelivery ],
        [ sh:node :ValidSchemaOrderStatus ;
            sh:path schema1:orderStatus ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:paymentDueDate ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:discount ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:discountCode ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] [ sh:node :ValidSchemaOrderItem ] ) ;
            sh:path schema1:orderedItem ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:seller ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:confirmationNumber ],
        [ sh:node :ValidSchemaInvoice ;
            sh:path schema1:partOfInvoice ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:discountCurrency ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:orderNumber ],
        [ sh:node :ValidSchemaPostalAddress ;
            sh:path schema1:billingAddress ],
        [ sh:node :ValidSchemaOffer ;
            sh:path schema1:acceptedOffer ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:broker ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:orderDate ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:merchant ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:customer ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isGift ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:paymentMethodId ],
        [ sh:node :ValidSchemaPaymentMethod ;
            sh:path schema1:paymentMethod ] ;
    sh:targetClass schema1:Order .

:ValidSchemaOrderItem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:orderItemNumber ],
        [ sh:node :ValidSchemaOrderStatus ;
            sh:path schema1:orderItemStatus ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:orderQuantity ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] [ sh:node :ValidSchemaOrderItem ] ) ;
            sh:path schema1:orderedItem ],
        [ sh:node :ValidSchemaParcelDelivery ;
            sh:path schema1:orderDelivery ] ;
    sh:targetClass schema1:OrderItem .

:ValidSchemaOrderStatus a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OrderStatus .

:ValidSchemaOwnershipInfo a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:ownedThrough ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:acquiredFrom ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:typeOfGood ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:ownedFrom ] ;
    sh:targetClass schema1:OwnershipInfo .

:ValidSchemaParcelDelivery a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDeliveryEvent ;
            sh:path schema1:deliveryStatus ],
        [ sh:node :ValidSchemaOrder ;
            sh:path schema1:partOfOrder ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:carrier ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:node :ValidSchemaPostalAddress ;
            sh:path schema1:originAddress ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:expectedArrivalUntil ],
        [ sh:node :ValidSchemaProduct ;
            sh:path schema1:itemShipped ],
        [ sh:node :ValidSchemaPostalAddress ;
            sh:path schema1:deliveryAddress ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:trackingNumber ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:expectedArrivalFrom ],
        [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:hasDeliveryMethod ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:trackingUrl ] ;
    sh:targetClass schema1:ParcelDelivery .

:ValidSchemaPhotograph a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Photograph .

:ValidSchemaPriceTypeEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PriceTypeEnumeration .

:ValidSchemaProductGroup a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:variesBy ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:productGroupID ],
        [ sh:node :ValidSchemaProduct ;
            sh:path schema1:hasVariant ] ;
    sh:targetClass schema1:ProductGroup .

:ValidSchemaProductReturnPolicy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInteger ;
            sh:path schema1:productReturnDays ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:productReturnLink ] ;
    sh:targetClass schema1:ProductReturnPolicy .

:ValidSchemaPublicationEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:publishedBy ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:free ],
        [ sh:node :ValidSchemaBroadcastService ;
            sh:path schema1:publishedOn ] ;
    sh:targetClass schema1:PublicationEvent .

:ValidSchemaRestrictedDiet a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:RestrictedDiet .

:ValidSchemaSchedule a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDayOfWeek ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:byDay ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:exceptDate ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:byMonth ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:endTime ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:byMonthDay ],
        [ sh:or ( [ sh:node :ValidSchemaDuration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:repeatFrequency ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:startTime ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:byMonthWeek ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:scheduleTimezone ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:repeatCount ] ;
    sh:targetClass schema1:Schedule .

:ValidSchemaShippingDeliveryTime a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaOpeningHoursSpecification ;
            sh:path schema1:businessDays ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:transitTime ],
        [ sh:node :ValidSchemaTime ;
            sh:path schema1:cutoffTime ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:handlingTime ] ;
    sh:targetClass schema1:ShippingDeliveryTime .

:ValidSchemaSizeSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:suggestedAge ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaSizeGroupEnumeration ] ) ;
            sh:path schema1:sizeGroup ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:suggestedMeasurement ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaGenderType ] ) ;
            sh:path schema1:suggestedGender ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:hasMeasurement ],
        [ sh:or ( [ sh:node :ValidSchemaSizeSystemEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:sizeSystem ] ;
    sh:targetClass schema1:SizeSpecification .

:ValidSchemaSpeakableSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaXPathType ;
            sh:path schema1:xpath ],
        [ sh:node :ValidSchemaCssSelectorType ;
            sh:path schema1:cssSelector ] ;
    sh:targetClass schema1:SpeakableSpecification .

:ValidSchemaTrainStation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:TrainStation .

:ValidSchemaUnitPriceSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDuration ] [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:billingDuration ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:unitText ],
        [ sh:node :ValidSchemaPriceComponentTypeEnumeration ;
            sh:path schema1:priceComponentType ],
        [ sh:or ( [ sh:node :ValidSchemaPriceTypeEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:priceType ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:referenceQuantity ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:unitCode ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:billingStart ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:billingIncrement ] ;
    sh:targetClass schema1:UnitPriceSpecification .

:ValidSchemaWebPage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaURL ;
            sh:path schema1:relatedLink ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:reviewedBy ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:significantLink ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBreadcrumbList ] ) ;
            sh:path schema1:breadcrumb ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:lastReviewed ],
        [ sh:node :ValidSchemaWebPageElement ;
            sh:path schema1:mainContentOfPage ],
        [ sh:or ( [ sh:node :ValidSchemaSpeakableSpecification ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:speakable ],
        [ sh:node :ValidSchemaImageObject ;
            sh:path schema1:primaryImageOfPage ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:significantLinks ],
        [ sh:node :ValidSchemaSpecialty ;
            sh:path schema1:specialty ] ;
    sh:targetClass schema1:WebPage .

:ValidSchemaXPathType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:XPathType .

:ValidSchemaBedDetails a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:numberOfBeds ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBedType ] ) ;
            sh:path schema1:typeOfBed ] ;
    sh:targetClass schema1:BedDetails .

:ValidSchemaBlogPosting a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BlogPosting .

:ValidSchemaBroadcastService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPlace ;
            sh:path schema1:area ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaBroadcastFrequencySpecification ] ) ;
            sh:path schema1:broadcastFrequency ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:broadcastTimezone ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:inLanguage ],
        [ sh:node :ValidSchemaBroadcastService ;
            sh:path schema1:parentService ],
        [ sh:node :ValidSchemaBroadcastChannel ;
            sh:path schema1:hasBroadcastChannel ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:callSign ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:broadcastAffiliateOf ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:videoFormat ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:broadcaster ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:broadcastDisplayName ] ;
    sh:targetClass schema1:BroadcastService .

:ValidSchemaBusinessFunction a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BusinessFunction .

:ValidSchemaCourse a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaCourseInstance ;
            sh:path schema1:hasCourseInstance ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEducationalOccupationalCredential ] ) ;
            sh:path schema1:occupationalCredentialAwarded ],
        [ sh:or ( [ sh:node :ValidSchemaInteger ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:numberOfCredits ],
        [ sh:or ( [ sh:node :ValidSchemaEducationalOccupationalCredential ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:educationalCredentialAwarded ],
        [ sh:or ( [ sh:node :ValidSchemaCourse ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaAlignmentObject ] ) ;
            sh:path schema1:coursePrerequisites ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:courseCode ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:financialAidEligible ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:totalHistoricalEnrollment ],
        [ sh:or ( [ sh:node :ValidSchemaLanguage ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:availableLanguage ],
        [ sh:node :ValidSchemaSyllabus ;
            sh:path schema1:syllabusSections ] ;
    sh:targetClass schema1:Course .

:ValidSchemaCreativeWorkSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:issn ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ] ;
    sh:targetClass schema1:CreativeWorkSeries .

:ValidSchemaDataCatalog a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementMethod ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementTechnique ],
        [ sh:node :ValidSchemaDataset ;
            sh:path schema1:dataset ] ;
    sh:targetClass schema1:DataCatalog .

:ValidSchemaDataFeed a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaDataFeedItem ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:dataFeedElement ] ;
    sh:targetClass schema1:DataFeed .

:ValidSchemaDataset a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDataDownload ;
            sh:path schema1:distribution ],
        [ sh:node :ValidSchemaDataCatalog ;
            sh:path schema1:includedDataCatalog ],
        [ sh:or ( [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:variablesMeasured ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:issn ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementMethod ],
        [ sh:or ( [ sh:node :ValidSchemaProperty ] [ sh:node :ValidSchemaStatisticalVariable ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPropertyValue ] ) ;
            sh:path schema1:variableMeasured ],
        [ sh:node :ValidSchemaDataCatalog ;
            sh:path schema1:includedInDataCatalog ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:datasetTimeInterval ],
        [ sh:node :ValidSchemaDataCatalog ;
            sh:path schema1:catalog ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementTechnique ] ;
    sh:targetClass schema1:Dataset .

:ValidSchemaDayOfWeek a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DayOfWeek .

:ValidSchemaDrugLegalStatus a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:applicableLocation ] ;
    sh:targetClass schema1:DrugLegalStatus .

:ValidSchemaInteractionCounter a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInteger ;
            sh:path schema1:userInteractionCount ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaVirtualLocation ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:location ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:endTime ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:startTime ],
        [ sh:or ( [ sh:node :ValidSchemaSoftwareApplication ] [ sh:node :ValidSchemaWebSite ] ) ;
            sh:path schema1:interactionService ],
        [ sh:node :ValidSchemaAction ;
            sh:path schema1:interactionType ] ;
    sh:targetClass schema1:InteractionCounter .

:ValidSchemaMeasurementTypeEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MeasurementTypeEnumeration .

:ValidSchemaMedicalProcedure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:followup ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMedicalEntity ] ) ;
            sh:path schema1:preparation ],
        [ sh:or ( [ sh:node :ValidSchemaEventStatusType ] [ sh:node :ValidSchemaMedicalStudyStatus ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:status ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:howPerformed ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:bodyLocation ],
        [ sh:node :ValidSchemaMedicalProcedureType ;
            sh:path schema1:procedureType ] ;
    sh:targetClass schema1:MedicalProcedure .

:ValidSchemaMedicalStudyStatus a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalStudyStatus .

:ValidSchemaMenuSection a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMenuSection ;
            sh:path schema1:hasMenuSection ],
        [ sh:node :ValidSchemaMenuItem ;
            sh:path schema1:hasMenuItem ] ;
    sh:targetClass schema1:MenuSection .

:ValidSchemaMerchantReturnPolicy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaReturnFeesEnumeration ;
            sh:path schema1:customerRemorseReturnFees ],
        [ sh:node :ValidSchemaReturnFeesEnumeration ;
            sh:path schema1:returnFees ],
        [ sh:node :ValidSchemaReturnLabelSourceEnumeration ;
            sh:path schema1:returnLabelSource ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:returnShippingFeesAmount ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:restockingFee ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:customerRemorseReturnShippingFeesAmount ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCountry ] ) ;
            sh:path schema1:returnPolicyCountry ],
        [ sh:node :ValidSchemaPropertyValue ;
            sh:path schema1:additionalProperty ],
        [ sh:node :ValidSchemaOfferItemCondition ;
            sh:path schema1:itemCondition ],
        [ sh:node :ValidSchemaReturnFeesEnumeration ;
            sh:path schema1:itemDefectReturnFees ],
        [ sh:node :ValidSchemaMonetaryAmount ;
            sh:path schema1:itemDefectReturnShippingFeesAmount ],
        [ sh:node :ValidSchemaReturnMethodEnumeration ;
            sh:path schema1:returnMethod ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:inStoreReturnsOffered ],
        [ sh:or ( [ sh:node :ValidSchemaCountry ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:applicableCountry ],
        [ sh:node :ValidSchemaReturnLabelSourceEnumeration ;
            sh:path schema1:itemDefectReturnLabelSource ],
        [ sh:node :ValidSchemaMerchantReturnPolicySeasonalOverride ;
            sh:path schema1:returnPolicySeasonalOverride ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:merchantReturnDays ],
        [ sh:node :ValidSchemaMerchantReturnEnumeration ;
            sh:path schema1:returnPolicyCategory ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:merchantReturnLink ],
        [ sh:node :ValidSchemaReturnLabelSourceEnumeration ;
            sh:path schema1:customerRemorseReturnLabelSource ],
        [ sh:node :ValidSchemaRefundTypeEnumeration ;
            sh:path schema1:refundType ] ;
    sh:targetClass schema1:MerchantReturnPolicy .

:ValidSchemaMusicComposition a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:musicalKey ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:composer ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:iswcCode ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:lyricist ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:musicCompositionForm ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:lyrics ],
        [ sh:node :ValidSchemaMusicComposition ;
            sh:path schema1:includedComposition ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:firstPerformance ],
        [ sh:node :ValidSchemaMusicRecording ;
            sh:path schema1:recordedAs ],
        [ sh:node :ValidSchemaMusicComposition ;
            sh:path schema1:musicArrangement ] ;
    sh:targetClass schema1:MusicComposition .

:ValidSchemaOfferCatalog a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OfferCatalog .

:ValidSchemaProgramMembership a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:membershipNumber ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:hostingOrganization ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:programName ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaNumber ] ) ;
            sh:path schema1:membershipPointsEarned ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:member ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:members ] ;
    sh:targetClass schema1:ProgramMembership .

:ValidSchemaReturnFeesEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReturnFeesEnumeration .

:ValidSchemaReturnLabelSourceEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:ReturnLabelSourceEnumeration .

:ValidSchemaSuperficialAnatomy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:relatedCondition ],
        [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:relatedTherapy ],
        [ sh:or ( [ sh:node :ValidSchemaAnatomicalStructure ] [ sh:node :ValidSchemaAnatomicalSystem ] ) ;
            sh:path schema1:relatedAnatomy ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:associatedPathophysiology ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:significance ] ;
    sh:targetClass schema1:SuperficialAnatomy .

:ValidSchemaTVSeries a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaCreativeWorkSeason ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:season ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:containsSeason ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:seasons ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:titleEIDR ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episode ],
        [ sh:node :ValidSchemaCountry ;
            sh:path schema1:countryOfOrigin ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfSeasons ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfEpisodes ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episodes ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ] ;
    sh:targetClass schema1:TVSeries .

:ValidSchemaTaxon a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaTaxon ] ) ;
            sh:path schema1:childTaxon ],
        [ sh:or ( [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:taxonRank ],
        [ sh:node :ValidSchemaDefinedTerm ;
            sh:path schema1:hasDefinedTerm ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaTaxon ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:parentTaxon ] ;
    sh:targetClass schema1:Taxon .

:ValidSchemaTypeAndQuantityNode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:unitCode ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:unitText ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:amountOfThisGood ],
        [ sh:node :ValidSchemaBusinessFunction ;
            sh:path schema1:businessFunction ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:typeOfGood ] ;
    sh:targetClass schema1:TypeAndQuantityNode .

:ValidSchemaAlignmentObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:alignmentType ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:educationalFramework ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:targetDescription ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:targetName ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:targetUrl ] ;
    sh:targetClass schema1:AlignmentObject .

:ValidSchemaBedType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:BedType .

:ValidSchemaBrand a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:or ( [ sh:node :ValidSchemaImageObject ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:logo ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:slogan ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ] ;
    sh:targetClass schema1:Brand .

:ValidSchemaDefinedRegion a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:addressRegion ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postalCodePrefix ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postalCode ],
        [ sh:or ( [ sh:node :ValidSchemaCountry ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:addressCountry ],
        [ sh:node :ValidSchemaPostalCodeRangeSpecification ;
            sh:path schema1:postalCodeRange ] ;
    sh:targetClass schema1:DefinedRegion .

:ValidSchemaEventStatusType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:EventStatusType .

:ValidSchemaGenderType a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:GenderType .

:ValidSchemaLegislation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaLegislation ;
            sh:path schema1:legislationChanges ],
        [ sh:node :ValidSchemaLegislation ;
            sh:path schema1:legislationTransposes ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:legislationDate ],
        [ sh:or ( [ sh:node :ValidSchemaAdministrativeArea ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:jurisdiction ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:legislationIdentifier ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:legislationType ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:legislationDateVersion ],
        [ sh:node :ValidSchemaLegalForceStatus ;
            sh:path schema1:legislationLegalForce ],
        [ sh:node :ValidSchemaLegislation ;
            sh:path schema1:legislationConsolidates ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:legislationPassedBy ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:legislationResponsible ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:legislationJurisdiction ],
        [ sh:node :ValidSchemaLegislation ;
            sh:path schema1:legislationApplies ] ;
    sh:targetClass schema1:Legislation .

:ValidSchemaLocationFeatureSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validFrom ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validThrough ],
        [ sh:node :ValidSchemaOpeningHoursSpecification ;
            sh:path schema1:hoursAvailable ] ;
    sh:targetClass schema1:LocationFeatureSpecification .

:ValidSchemaMaximumDoseSchedule a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MaximumDoseSchedule .

:ValidSchemaMedicalEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalEnumeration .

:ValidSchemaMusicAlbum a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMusicRelease ;
            sh:path schema1:albumRelease ],
        [ sh:node :ValidSchemaMusicAlbumProductionType ;
            sh:path schema1:albumProductionType ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:byArtist ],
        [ sh:node :ValidSchemaMusicAlbumReleaseType ;
            sh:path schema1:albumReleaseType ] ;
    sh:targetClass schema1:MusicAlbum .

:ValidSchemaOfferItemCondition a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:OfferItemCondition .

:ValidSchemaRating a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:bestRating ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:ratingValue ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:worstRating ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:author ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:reviewAspect ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:ratingExplanation ] ;
    sh:targetClass schema1:Rating .

:ValidSchemaSportsTeam a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaGenderType ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gender ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:athlete ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:coach ] ;
    sh:targetClass schema1:SportsTeam .

:ValidSchemaStatisticalVariable a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementMethod ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaProperty ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:statType ],
        [ sh:node :ValidSchemaProperty ;
            sh:path schema1:measuredProperty ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementTechnique ],
        [ sh:node :ValidSchemaStatisticalVariable ;
            sh:path schema1:measurementDenominator ],
        [ sh:node :ValidSchemaEnumeration ;
            sh:path schema1:measurementQualifier ],
        [ sh:node :ValidSchemaClass ;
            sh:path schema1:populationType ] ;
    sh:targetClass schema1:StatisticalVariable .

:ValidSchemaTrip a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaTrip ;
            sh:path schema1:subTrip ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:departureTime ],
        [ sh:node :ValidSchemaTrip ;
            sh:path schema1:partOfTrip ],
        [ sh:or ( [ sh:node :ValidSchemaTime ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:arrivalTime ],
        [ sh:or ( [ sh:node :ValidSchemaItemList ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:itinerary ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:tripOrigin ] ;
    sh:targetClass schema1:Trip .

:ValidSchemaVessel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Vessel .

:ValidSchemaVirtualLocation a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:VirtualLocation .

:ValidSchemaWarrantyPromise a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:durationOfWarranty ],
        [ sh:node :ValidSchemaWarrantyScope ;
            sh:path schema1:warrantyScope ] ;
    sh:targetClass schema1:WarrantyPromise .

:ValidSchemaHyperTocEntry a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaHyperTocEntry ;
            sh:path schema1:tocContinuation ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:utterances ],
        [ sh:node :ValidSchemaMediaObject ;
            sh:path schema1:associatedMedia ] ;
    sh:targetClass schema1:HyperTocEntry .

:ValidSchemaMedicalSpecialty a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MedicalSpecialty .

:ValidSchemaMenuItem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNutritionInformation ;
            sh:path schema1:nutrition ],
        [ sh:or ( [ sh:node :ValidSchemaMenuSection ] [ sh:node :ValidSchemaMenuItem ] ) ;
            sh:path schema1:menuAddOn ],
        [ sh:node :ValidSchemaRestrictedDiet ;
            sh:path schema1:suitableForDiet ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ] ;
    sh:targetClass schema1:MenuItem .

:ValidSchemaMonetaryAmountDistribution a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:currency ] ;
    sh:targetClass schema1:MonetaryAmountDistribution .

:ValidSchemaPaymentMethod a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PaymentMethod .

:ValidSchemaProductModel a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaProductModel ;
            sh:path schema1:successorOf ],
        [ sh:node :ValidSchemaProductModel ;
            sh:path schema1:predecessorOf ],
        [ sh:or ( [ sh:node :ValidSchemaProductGroup ] [ sh:node :ValidSchemaProductModel ] ) ;
            sh:path schema1:isVariantOf ] ;
    sh:targetClass schema1:ProductModel .

:ValidSchemaSoftwareApplication a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaURL ;
            sh:path schema1:installUrl ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:applicationSuite ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:storageRequirements ],
        [ sh:node :ValidSchemaSoftwareApplication ;
            sh:path schema1:softwareAddOn ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:softwareHelp ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:softwareRequirements ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:softwareVersion ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:availableOnDevice ],
        [ sh:node :ValidSchemaDataFeed ;
            sh:path schema1:supportingData ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:countriesSupported ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:applicationSubCategory ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:downloadUrl ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:operatingSystem ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:processorRequirements ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:countriesNotSupported ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:memoryRequirements ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:releaseNotes ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:device ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:fileSize ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaImageObject ] ) ;
            sh:path schema1:screenshot ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:applicationCategory ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:permissions ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:requirements ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:featureList ] ;
    sh:targetClass schema1:SoftwareApplication .

:ValidSchemaComment a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaComment ;
            sh:path schema1:parentItem ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:upvoteCount ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:downvoteCount ] ;
    sh:targetClass schema1:Comment .

:ValidSchemaMusicRecording a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:byArtist ],
        [ sh:node :ValidSchemaMusicPlaylist ;
            sh:path schema1:inPlaylist ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:isrcCode ],
        [ sh:node :ValidSchemaMusicComposition ;
            sh:path schema1:recordingOf ],
        [ sh:node :ValidSchemaMusicAlbum ;
            sh:path schema1:inAlbum ] ;
    sh:targetClass schema1:MusicRecording .

:ValidSchemaOpeningHoursSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaTime ;
            sh:path schema1:closes ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validFrom ],
        [ sh:node :ValidSchemaTime ;
            sh:path schema1:opens ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validThrough ],
        [ sh:node :ValidSchemaDayOfWeek ;
            sh:path schema1:dayOfWeek ] ;
    sh:targetClass schema1:OpeningHoursSpecification .

:ValidSchemaBioChemEntity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaBioChemEntity ;
            sh:path schema1:bioChemInteraction ],
        [ sh:node :ValidSchemaBioChemEntity ;
            sh:path schema1:hasBioChemEntityPart ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaTaxon ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:taxonomicRange ],
        [ sh:or ( [ sh:node :ValidSchemaMedicalCondition ] [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:associatedDisease ],
        [ sh:or ( [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:hasMolecularFunction ],
        [ sh:node :ValidSchemaDefinedTerm ;
            sh:path schema1:biologicalRole ],
        [ sh:or ( [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:isLocatedInSubcellularLocation ],
        [ sh:node :ValidSchemaGene ;
            sh:path schema1:isEncodedByBioChemEntity ],
        [ sh:node :ValidSchemaGrant ;
            sh:path schema1:funding ],
        [ sh:node :ValidSchemaBioChemEntity ;
            sh:path schema1:bioChemSimilarity ],
        [ sh:node :ValidSchemaBioChemEntity ;
            sh:path schema1:isPartOfBioChemEntity ],
        [ sh:or ( [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:hasRepresentation ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaPropertyValue ] ) ;
            sh:path schema1:isInvolvedInBiologicalProcess ] ;
    sh:targetClass schema1:BioChemEntity .

:ValidSchemaClass a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaProperty ] [ sh:node :ValidSchemaEnumeration ] [ sh:node :ValidSchemaClass ] ) ;
            sh:path schema1:supersededBy ] ;
    sh:targetClass schema1:Class .

:ValidSchemaDrug a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:nonProprietaryName ],
        [ sh:node :ValidSchemaDoseSchedule ;
            sh:path schema1:doseSchedule ],
        [ sh:node :ValidSchemaDrugPregnancyCategory ;
            sh:path schema1:pregnancyCategory ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:labelDetails ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:foodWarning ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isAvailableGenerically ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:clincalPharmacology ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:warning ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:prescribingInfo ],
        [ sh:or ( [ sh:node :ValidSchemaDrugPrescriptionStatus ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:prescriptionStatus ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:dosageForm ],
        [ sh:node :ValidSchemaMaximumDoseSchedule ;
            sh:path schema1:maximumIntake ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:administrationRoute ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:clinicalPharmacology ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:rxcui ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:breastfeedingWarning ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isProprietary ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:activeIngredient ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mechanismOfAction ],
        [ sh:node :ValidSchemaDrug ;
            sh:path schema1:relatedDrug ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:alcoholWarning ],
        [ sh:node :ValidSchemaHealthInsurancePlan ;
            sh:path schema1:includedInHealthInsurancePlan ],
        [ sh:node :ValidSchemaDrug ;
            sh:path schema1:interactingDrug ],
        [ sh:node :ValidSchemaDrugClass ;
            sh:path schema1:drugClass ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:drugUnit ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:pregnancyWarning ],
        [ sh:or ( [ sh:node :ValidSchemaDrugLegalStatus ] [ sh:node :ValidSchemaMedicalEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:legalStatus ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:overdosage ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:proprietaryName ],
        [ sh:node :ValidSchemaDrugStrength ;
            sh:path schema1:availableStrength ] ;
    sh:targetClass schema1:Drug .

:ValidSchemaGrant a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaProduct ] [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaEvent ] [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaMedicalEntity ] [ sh:node :ValidSchemaBioChemEntity ] ) ;
            sh:path schema1:fundedItem ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:funder ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:sponsor ] ;
    sh:targetClass schema1:Grant .

:ValidSchemaListItem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaListItem ;
            sh:path schema1:previousItem ],
        [ sh:or ( [ sh:node :ValidSchemaInteger ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:position ],
        [ sh:node :ValidSchemaListItem ;
            sh:path schema1:nextItem ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:item ] ;
    sh:targetClass schema1:ListItem .

:ValidSchemaMedicalTest a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:usedToDiagnose ],
        [ sh:or ( [ sh:node :ValidSchemaMedicalEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:normalRange ],
        [ sh:node :ValidSchemaMedicalSign ;
            sh:path schema1:signDetected ],
        [ sh:node :ValidSchemaMedicalDevice ;
            sh:path schema1:usesDevice ],
        [ sh:node :ValidSchemaDrug ;
            sh:path schema1:affectedBy ] ;
    sh:targetClass schema1:MedicalTest .

:ValidSchemaAggregateRating a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInteger ;
            sh:path schema1:ratingCount ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:reviewCount ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:itemReviewed ] ;
    sh:targetClass schema1:AggregateRating .

:ValidSchemaAnatomicalSystem a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:associatedPathophysiology ],
        [ sh:or ( [ sh:node :ValidSchemaAnatomicalStructure ] [ sh:node :ValidSchemaAnatomicalSystem ] ) ;
            sh:path schema1:comprisedOf ],
        [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:relatedCondition ],
        [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:relatedStructure ],
        [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:relatedTherapy ] ;
    sh:targetClass schema1:AnatomicalSystem .

:ValidSchemaEnumeration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaProperty ] [ sh:node :ValidSchemaEnumeration ] [ sh:node :ValidSchemaClass ] ) ;
            sh:path schema1:supersededBy ] ;
    sh:targetClass schema1:Enumeration .

:ValidSchemaPhysicalActivityCategory a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:PhysicalActivityCategory .

:ValidSchemaEpisode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:episodeNumber ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaCreativeWorkSeries ;
            sh:path schema1:partOfSeries ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ],
        [ sh:node :ValidSchemaCreativeWorkSeason ;
            sh:path schema1:partOfSeason ] ;
    sh:targetClass schema1:Episode .

:ValidSchemaStructuredValue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:StructuredValue .

:ValidSchemaVideoObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actors ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaMusicGroup ] ) ;
            sh:path schema1:musicBy ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMediaObject ] ) ;
            sh:path schema1:caption ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:embeddedTextCaption ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:videoFrameSize ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:directors ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:transcript ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:videoQuality ] ;
    sh:targetClass schema1:VideoObject .

:ValidSchemaDeliveryMethod a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DeliveryMethod .

:ValidSchemaDemand a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin14 ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin8 ],
        [ sh:node :ValidSchemaOfferItemCondition ;
            sh:path schema1:itemCondition ],
        [ sh:node :ValidSchemaPriceSpecification ;
            sh:path schema1:priceSpecification ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validThrough ],
        [ sh:node :ValidSchemaItemAvailability ;
            sh:path schema1:availability ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:availableAtOrFrom ],
        [ sh:or ( [ sh:node :ValidSchemaPaymentMethod ] [ sh:node :ValidSchemaLoanOrCredit ] ) ;
            sh:path schema1:acceptedPaymentMethod ],
        [ sh:node :ValidSchemaBusinessFunction ;
            sh:path schema1:businessFunction ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:availabilityEnds ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:areaServed ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin13 ],
        [ sh:node :ValidSchemaBusinessEntityType ;
            sh:path schema1:eligibleCustomerType ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:inventoryLevel ],
        [ sh:or ( [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:eligibleRegion ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:asin ],
        [ sh:node :ValidSchemaWarrantyPromise ;
            sh:path schema1:warranty ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:eligibleDuration ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validFrom ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:advanceBookingRequirement ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaAggregateOffer ] [ sh:node :ValidSchemaMenuItem ] [ sh:node :ValidSchemaTrip ] [ sh:node :ValidSchemaEvent ] [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:itemOffered ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mpn ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:eligibleQuantity ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin12 ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:serialNumber ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:deliveryLeadTime ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:seller ],
        [ sh:node :ValidSchemaTypeAndQuantityNode ;
            sh:path schema1:includesObject ],
        [ sh:node :ValidSchemaPriceSpecification ;
            sh:path schema1:eligibleTransactionVolume ],
        [ sh:or ( [ sh:node :ValidSchemaTime ] [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:availabilityStarts ],
        [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:availableDeliveryMethod ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gtin ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:sku ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] ) ;
            sh:path schema1:ineligibleRegion ] ;
    sh:targetClass schema1:Demand .

:ValidSchemaMass a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Mass .

:ValidSchemaMedicalCondition a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaAnatomicalStructure ] [ sh:node :ValidSchemaSuperficialAnatomy ] [ sh:node :ValidSchemaAnatomicalSystem ] ) ;
            sh:path schema1:associatedAnatomy ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:naturalProgression ],
        [ sh:or ( [ sh:node :ValidSchemaEventStatusType ] [ sh:node :ValidSchemaMedicalStudyStatus ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:status ],
        [ sh:node :ValidSchemaMedicalSignOrSymptom ;
            sh:path schema1:signOrSymptom ],
        [ sh:node :ValidSchemaMedicalRiskFactor ;
            sh:path schema1:riskFactor ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:epidemiology ],
        [ sh:node :ValidSchemaMedicalTest ;
            sh:path schema1:typicalTest ],
        [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:secondaryPrevention ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:possibleComplication ],
        [ sh:node :ValidSchemaDDxElement ;
            sh:path schema1:differentialDiagnosis ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:expectedPrognosis ],
        [ sh:node :ValidSchemaDrug ;
            sh:path schema1:drug ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:pathophysiology ],
        [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:primaryPrevention ],
        [ sh:node :ValidSchemaMedicalConditionStage ;
            sh:path schema1:stage ],
        [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:possibleTreatment ] ;
    sh:targetClass schema1:MedicalCondition .

:ValidSchemaProperty a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaClass ;
            sh:path schema1:rangeIncludes ],
        [ sh:or ( [ sh:node :ValidSchemaProperty ] [ sh:node :ValidSchemaEnumeration ] [ sh:node :ValidSchemaClass ] ) ;
            sh:path schema1:supersededBy ],
        [ sh:node :ValidSchemaProperty ;
            sh:path schema1:inverseOf ],
        [ sh:node :ValidSchemaClass ;
            sh:path schema1:domainIncludes ] ;
    sh:targetClass schema1:Property .

:ValidSchemaCreativeWorkSeason a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episode ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaInteger ] ) ;
            sh:path schema1:seasonNumber ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ],
        [ sh:node :ValidSchemaVideoObject ;
            sh:path schema1:trailer ],
        [ sh:node :ValidSchemaEpisode ;
            sh:path schema1:episodes ],
        [ sh:node :ValidSchemaCreativeWorkSeries ;
            sh:path schema1:partOfSeries ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfEpisodes ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ] ;
    sh:targetClass schema1:CreativeWorkSeason .

:ValidSchemaEducationalOccupationalCredential a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaDuration ;
            sh:path schema1:validFor ],
        [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:validIn ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:credentialCategory ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:recognizedBy ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:competencyRequired ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:educationalLevel ] ;
    sh:targetClass schema1:EducationalOccupationalCredential .

:ValidSchemaMedicalTherapy a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalEntity ;
            sh:path schema1:seriousAdverseOutcome ],
        [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:duplicateTherapy ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMedicalContraindication ] ) ;
            sh:path schema1:contraindication ] ;
    sh:targetClass schema1:MedicalTherapy .

:ValidSchemaMusicGroup a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPerson ;
            sh:path schema1:musicGroupMember ],
        [ sh:node :ValidSchemaMusicAlbum ;
            sh:path schema1:album ],
        [ sh:node :ValidSchemaMusicRecording ;
            sh:path schema1:tracks ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:genre ],
        [ sh:node :ValidSchemaMusicAlbum ;
            sh:path schema1:albums ],
        [ sh:or ( [ sh:node :ValidSchemaMusicRecording ] [ sh:node :ValidSchemaItemList ] ) ;
            sh:path schema1:track ] ;
    sh:targetClass schema1:MusicGroup .

:ValidSchemaMeasurementMethodEnum a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:MeasurementMethodEnum .

:ValidSchemaMedicalEntity a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaMedicalStudy ;
            sh:path schema1:study ],
        [ sh:node :ValidSchemaGrant ;
            sh:path schema1:funding ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:recognizingAuthority ],
        [ sh:or ( [ sh:node :ValidSchemaDrugLegalStatus ] [ sh:node :ValidSchemaMedicalEnumeration ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:legalStatus ],
        [ sh:node :ValidSchemaMedicalGuideline ;
            sh:path schema1:guideline ],
        [ sh:node :ValidSchemaMedicalSpecialty ;
            sh:path schema1:relevantSpecialty ],
        [ sh:node :ValidSchemaMedicineSystem ;
            sh:path schema1:medicineSystem ],
        [ sh:node :ValidSchemaMedicalCode ;
            sh:path schema1:code ] ;
    sh:targetClass schema1:MedicalEntity .

:ValidSchemaService a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaServiceChannel ;
            sh:path schema1:availableChannel ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:produces ],
        [ sh:or ( [ sh:node :ValidSchemaImageObject ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:logo ],
        [ sh:node :ValidSchemaOpeningHoursSpecification ;
            sh:path schema1:hoursAvailable ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:providerMobility ],
        [ sh:node :ValidSchemaAudience ;
            sh:path schema1:audience ],
        [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ],
        [ sh:or ( [ sh:node :ValidSchemaGovernmentBenefitsType ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:serviceType ],
        [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:serviceArea ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ],
        [ sh:node :ValidSchemaAudience ;
            sh:path schema1:serviceAudience ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:termsOfService ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:isRelatedTo ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:broker ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:areaServed ],
        [ sh:or ( [ sh:node :ValidSchemaBrand ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:brand ],
        [ sh:node :ValidSchemaOfferCatalog ;
            sh:path schema1:hasOfferCatalog ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:serviceOutput ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:slogan ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:isSimilarTo ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:award ] ;
    sh:targetClass schema1:Service .

:ValidSchemaCountry a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Country .

:ValidSchemaImageObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:embeddedTextCaption ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:representativeOfPage ],
        [ sh:or ( [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:exifData ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMediaObject ] ) ;
            sh:path schema1:caption ] ;
    sh:targetClass schema1:ImageObject .

:ValidSchemaItemList a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaListItem ] ) ;
            sh:path schema1:itemListElement ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaItemListOrderType ] ) ;
            sh:path schema1:itemListOrder ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:numberOfItems ] ;
    sh:targetClass schema1:ItemList .

:ValidSchemaMediaObject a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:encodingFormat ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:regionsAllowed ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:bitrate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:contentSize ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:uploadDate ],
        [ sh:node :ValidSchemaClaim ;
            sh:path schema1:interpretedAsClaim ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:endTime ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] ) ;
            sh:path schema1:ineligibleRegion ],
        [ sh:or ( [ sh:node :ValidSchemaDistance ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:width ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:sha256 ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:contentUrl ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:startTime ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:embedUrl ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:playerType ],
        [ sh:or ( [ sh:node :ValidSchemaBoolean ] [ sh:node :ValidSchemaMediaSubscription ] ) ;
            sh:path schema1:requiresSubscription ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:encodesCreativeWork ],
        [ sh:node :ValidSchemaNewsArticle ;
            sh:path schema1:associatedArticle ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:height ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:productionCompany ] ;
    sh:targetClass schema1:MediaObject .

:ValidSchemaWebContent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:WebContent .

:ValidSchemaCategoryCode a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaCategoryCodeSet ] ) ;
            sh:path schema1:inCodeSet ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:codeValue ] ;
    sh:targetClass schema1:CategoryCode .

:ValidSchemaPriceSpecification a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaPriceSpecification ;
            sh:path schema1:eligibleTransactionVolume ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:priceCurrency ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validThrough ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:minPrice ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:valueAddedTaxIncluded ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validFrom ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:maxPrice ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:price ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:eligibleQuantity ] ;
    sh:targetClass schema1:PriceSpecification .

:ValidSchemaOffer a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isFamilyFriendly ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:sku ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin12 ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:serialNumber ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:price ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin8 ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDuration ] ) ;
            sh:path schema1:leaseLength ],
        [ sh:node :ValidSchemaTypeAndQuantityNode ;
            sh:path schema1:includesObject ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:offeredBy ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:eligibleDuration ],
        [ sh:or ( [ sh:node :ValidSchemaPaymentMethod ] [ sh:node :ValidSchemaLoanOrCredit ] ) ;
            sh:path schema1:acceptedPaymentMethod ],
        [ sh:or ( [ sh:node :ValidSchemaTime ] [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:availabilityStarts ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:reviews ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin13 ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mpn ],
        [ sh:node :ValidSchemaWarrantyPromise ;
            sh:path schema1:warranty ],
        [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validThrough ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:asin ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:areaServed ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:deliveryLeadTime ],
        [ sh:node :ValidSchemaBusinessEntityType ;
            sh:path schema1:eligibleCustomerType ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:seller ],
        [ sh:node :ValidSchemaDeliveryMethod ;
            sh:path schema1:availableDeliveryMethod ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:priceCurrency ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaAggregateOffer ] [ sh:node :ValidSchemaMenuItem ] [ sh:node :ValidSchemaTrip ] [ sh:node :ValidSchemaEvent ] [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:itemOffered ],
        [ sh:node :ValidSchemaBusinessFunction ;
            sh:path schema1:businessFunction ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:availabilityEnds ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:availableAtOrFrom ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:priceValidUntil ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:advanceBookingRequirement ],
        [ sh:node :ValidSchemaOfferShippingDetails ;
            sh:path schema1:shippingDetails ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gtin ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validFrom ],
        [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] ) ;
            sh:path schema1:ineligibleRegion ],
        [ sh:node :ValidSchemaPriceSpecification ;
            sh:path schema1:eligibleTransactionVolume ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:checkoutPageURLTemplate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin14 ],
        [ sh:node :ValidSchemaAdultOrientedEnumeration ;
            sh:path schema1:hasAdultConsideration ],
        [ sh:or ( [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:eligibleRegion ],
        [ sh:node :ValidSchemaOffer ;
            sh:path schema1:addOn ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mobileUrl ],
        [ sh:node :ValidSchemaPriceSpecification ;
            sh:path schema1:priceSpecification ],
        [ sh:node :ValidSchemaMerchantReturnPolicy ;
            sh:path schema1:hasMerchantReturnPolicy ],
        [ sh:node :ValidSchemaOfferItemCondition ;
            sh:path schema1:itemCondition ],
        [ sh:node :ValidSchemaItemAvailability ;
            sh:path schema1:availability ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:inventoryLevel ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:eligibleQuantity ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:hasMeasurement ] ;
    sh:targetClass schema1:Offer .

:ValidSchemaAnatomicalStructure a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:connectedTo ],
        [ sh:node :ValidSchemaMedicalCondition ;
            sh:path schema1:relatedCondition ],
        [ sh:node :ValidSchemaAnatomicalSystem ;
            sh:path schema1:partOfSystem ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:bodyLocation ],
        [ sh:node :ValidSchemaImageObject ;
            sh:path schema1:diagram ],
        [ sh:node :ValidSchemaAnatomicalStructure ;
            sh:path schema1:subStructure ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:associatedPathophysiology ],
        [ sh:node :ValidSchemaMedicalTherapy ;
            sh:path schema1:relatedTherapy ] ;
    sh:targetClass schema1:AnatomicalStructure .

:ValidSchemaDistance a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Distance .

:ValidSchemaPostalAddress a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:addressRegion ],
        [ sh:or ( [ sh:node :ValidSchemaCountry ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:addressCountry ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postalCode ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postOfficeBoxNumber ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:streetAddress ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:addressLocality ] ;
    sh:targetClass schema1:PostalAddress .

:ValidSchemaReview a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaReview ;
            sh:path schema1:associatedReview ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:associatedClaimReview ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:reviewAspect ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:reviewBody ],
        [ sh:or ( [ sh:node :ValidSchemaWebContent ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaListItem ] [ sh:node :ValidSchemaItemList ] ) ;
            sh:path schema1:positiveNotes ],
        [ sh:or ( [ sh:node :ValidSchemaItemList ] [ sh:node :ValidSchemaWebContent ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaListItem ] ) ;
            sh:path schema1:negativeNotes ],
        [ sh:node :ValidSchemaRating ;
            sh:path schema1:reviewRating ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:associatedMediaReview ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:itemReviewed ] ;
    sh:targetClass schema1:Review .

:ValidSchemaGeoShape a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaCountry ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:addressCountry ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:elevation ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:circle ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:address ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:box ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:line ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:polygon ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:postalCode ] ;
    sh:targetClass schema1:GeoShape .

:ValidSchemaPropertyValue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaNumber ;
            sh:path schema1:maxValue ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaBoolean ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:value ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementTechnique ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:minValue ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaMeasurementMethodEnum ] ) ;
            sh:path schema1:measurementMethod ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:unitCode ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:unitText ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:propertyID ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaMeasurementTypeEnumeration ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEnumeration ] [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:valueReference ] ;
    sh:targetClass schema1:PropertyValue .

:ValidSchemaEvent a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaInteger ;
            sh:path schema1:maximumAttendeeCapacity ],
        [ sh:node :ValidSchemaSchedule ;
            sh:path schema1:eventSchedule ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:workFeatured ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:maximumPhysicalAttendeeCapacity ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:subEvent ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:duration ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:director ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaTime ] ) ;
            sh:path schema1:doorTime ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:performers ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:sponsor ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isAccessibleForFree ],
        [ sh:node :ValidSchemaEventStatusType ;
            sh:path schema1:eventStatus ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:performer ],
        [ sh:node :ValidSchemaGrant ;
            sh:path schema1:funding ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:endDate ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:recordedIn ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:previousStartDate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:typicalAgeRange ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:organizer ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:contributor ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:attendee ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:about ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:maximumVirtualAttendeeCapacity ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:superEvent ],
        [ sh:node :ValidSchemaAudience ;
            sh:path schema1:audience ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:subEvents ],
        [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:attendees ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:remainingAttendeeCapacity ],
        [ sh:node :ValidSchemaEventAttendanceModeEnumeration ;
            sh:path schema1:eventAttendanceMode ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:keywords ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaVirtualLocation ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:location ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:composer ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:funder ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:actor ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:startDate ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:translator ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:inLanguage ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:workPerformed ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ] ;
    sh:targetClass schema1:Event .

:ValidSchemaGeospatialGeometry a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoOverlaps ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoCrosses ],
        [ sh:or ( [ sh:node :ValidSchemaGeospatialGeometry ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:geoTouches ],
        [ sh:or ( [ sh:node :ValidSchemaGeospatialGeometry ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:geoIntersects ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoDisjoint ],
        [ sh:or ( [ sh:node :ValidSchemaGeospatialGeometry ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:geoCovers ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoCoveredBy ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoContains ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoEquals ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoWithin ] ;
    sh:targetClass schema1:GeospatialGeometry .

:ValidSchemaLanguage a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Language .

:ValidSchemaAdministrativeArea a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:AdministrativeArea .

:ValidSchemaQualitativeValue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaQualitativeValue ;
            sh:path schema1:greaterOrEqual ],
        [ sh:node :ValidSchemaQualitativeValue ;
            sh:path schema1:greater ],
        [ sh:node :ValidSchemaQualitativeValue ;
            sh:path schema1:lesser ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaMeasurementTypeEnumeration ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEnumeration ] [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:valueReference ],
        [ sh:node :ValidSchemaQualitativeValue ;
            sh:path schema1:equal ],
        [ sh:node :ValidSchemaPropertyValue ;
            sh:path schema1:additionalProperty ],
        [ sh:node :ValidSchemaQualitativeValue ;
            sh:path schema1:lesserOrEqual ],
        [ sh:node :ValidSchemaQualitativeValue ;
            sh:path schema1:nonEqual ] ;
    sh:targetClass schema1:QualitativeValue .

:ValidSchemaProduct a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:productID ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:countryOfAssembly ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:reviews ],
        [ sh:node :ValidSchemaProductReturnPolicy ;
            sh:path schema1:hasProductReturnPolicy ],
        [ sh:node :ValidSchemaProduct ;
            sh:path schema1:isAccessoryOrSparePartFor ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:isSimilarTo ],
        [ sh:or ( [ sh:node :ValidSchemaPhysicalActivityCategory ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCategoryCode ] ) ;
            sh:path schema1:category ],
        [ sh:node :ValidSchemaOfferItemCondition ;
            sh:path schema1:itemCondition ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:color ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isFamilyFriendly ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:hasMeasurement ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mpn ],
        [ sh:or ( [ sh:node :ValidSchemaBrand ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:brand ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:height ],
        [ sh:node :ValidSchemaProduct ;
            sh:path schema1:isConsumableFor ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gtin ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:inProductGroupWithID ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin14 ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:mobileUrl ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin8 ],
        [ sh:node :ValidSchemaPropertyValue ;
            sh:path schema1:additionalProperty ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:award ],
        [ sh:node :ValidSchemaEnergyConsumptionDetails ;
            sh:path schema1:hasEnergyConsumptionDetails ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:slogan ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:sku ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:purchaseDate ],
        [ sh:node :ValidSchemaMerchantReturnPolicy ;
            sh:path schema1:hasMerchantReturnPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaSizeSpecification ] [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:size ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:weight ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:depth ],
        [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:or ( [ sh:node :ValidSchemaProductGroup ] [ sh:node :ValidSchemaProductModel ] ) ;
            sh:path schema1:isVariantOf ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:countryOfLastProcessing ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaProductModel ] ) ;
            sh:path schema1:model ],
        [ sh:or ( [ sh:node :ValidSchemaImageObject ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:logo ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:asin ],
        [ sh:or ( [ sh:node :ValidSchemaService ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:isRelatedTo ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:awards ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:productionDate ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:releaseDate ],
        [ sh:or ( [ sh:node :ValidSchemaItemList ] [ sh:node :ValidSchemaWebContent ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaListItem ] ) ;
            sh:path schema1:negativeNotes ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:manufacturer ],
        [ sh:or ( [ sh:node :ValidSchemaWebContent ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaListItem ] [ sh:node :ValidSchemaItemList ] ) ;
            sh:path schema1:positiveNotes ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin13 ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:keywords ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:gtin12 ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:pattern ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaProduct ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:material ],
        [ sh:node :ValidSchemaAdultOrientedEnumeration ;
            sh:path schema1:hasAdultConsideration ],
        [ sh:or ( [ sh:node :ValidSchemaDistance ] [ sh:node :ValidSchemaQuantitativeValue ] ) ;
            sh:path schema1:width ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ],
        [ sh:node :ValidSchemaGrant ;
            sh:path schema1:funding ],
        [ sh:node :ValidSchemaCountry ;
            sh:path schema1:countryOfOrigin ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:nsn ],
        [ sh:node :ValidSchemaAudience ;
            sh:path schema1:audience ] ;
    sh:targetClass schema1:Product .

:ValidSchemaContactPoint a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaContactPointOption ;
            sh:path schema1:contactOption ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:faxNumber ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:serviceArea ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:areaServed ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:telephone ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:email ],
        [ sh:or ( [ sh:node :ValidSchemaLanguage ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:availableLanguage ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:contactType ],
        [ sh:node :ValidSchemaOpeningHoursSpecification ;
            sh:path schema1:hoursAvailable ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:productSupported ] ;
    sh:targetClass schema1:ContactPoint .

:ValidSchemaAudience a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaAdministrativeArea ;
            sh:path schema1:geographicArea ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:audienceType ] ;
    sh:targetClass schema1:Audience .

:ValidSchemaTime a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Time .

:ValidSchemaMonetaryAmount a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validFrom ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:currency ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:maxValue ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaBoolean ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:value ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:validThrough ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:minValue ] ;
    sh:targetClass schema1:MonetaryAmount .

:ValidSchemaDuration a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Duration .

:ValidSchemaThing a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaImageObject ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:image ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:alternateName ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:name ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:additionalType ],
        [ sh:node :ValidSchemaAction ;
            sh:path schema1:potentialAction ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaTextObject ] ) ;
            sh:path schema1:description ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:identifier ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:disambiguatingDescription ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:mainEntityOfPage ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:sameAs ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:url ],
        [ sh:or ( [ sh:node :ValidSchemaEvent ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:subjectOf ] ;
    sh:targetClass schema1:Thing .

:ValidSchemaBoolean a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Boolean .

:ValidSchemaCreativeWork a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaItemList ;
            sh:path schema1:accessModeSufficient ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:discussionUrl ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:dateModified ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:hasPart ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:interactivityType ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:encodingFormat ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:contentLocation ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:publisher ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaCorrectionComment ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:correction ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:inLanguage ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:license ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:headline ],
        [ sh:node :ValidSchemaImageObject ;
            sh:path schema1:thumbnail ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaProduct ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:material ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:copyrightHolder ],
        [ sh:node :ValidSchemaComment ;
            sh:path schema1:comment ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:sdPublisher ],
        [ sh:node :ValidSchemaInteractionCounter ;
            sh:path schema1:interactionStatistic ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:abstract ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:exampleOfWork ],
        [ sh:node :ValidSchemaAudience ;
            sh:path schema1:audience ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:thumbnailUrl ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:locationCreated ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:temporalCoverage ],
        [ sh:or ( [ sh:node :ValidSchemaAudioObject ] [ sh:node :ValidSchemaClip ] [ sh:node :ValidSchemaMusicRecording ] ) ;
            sh:path schema1:audio ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:educationalLevel ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:mainEntity ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:awards ],
        [ sh:node :ValidSchemaMediaObject ;
            sh:path schema1:associatedMedia ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accessibilityControl ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:contributor ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isFamilyFriendly ],
        [ sh:or ( [ sh:node :ValidSchemaProduct ] [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:isBasedOn ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:about ],
        [ sh:or ( [ sh:node :ValidSchemaDemand ] [ sh:node :ValidSchemaOffer ] ) ;
            sh:path schema1:offers ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:isPartOf ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:assesses ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accessibilitySummary ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:sdLicense ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:schemaVersion ],
        [ sh:node :ValidSchemaMediaObject ;
            sh:path schema1:encodings ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:sponsor ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:publisherImprint ],
        [ sh:node :ValidSchemaCountry ;
            sh:path schema1:countryOfOrigin ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:pattern ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:publishingPrinciples ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:sourceOrganization ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:teaches ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:character ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:citation ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:spatial ],
        [ sh:node :ValidSchemaGrant ;
            sh:path schema1:funding ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:materialExtent ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:alternativeHeadline ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:workExample ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:creditText ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:producer ],
        [ sh:or ( [ sh:node :ValidSchemaProduct ] [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:isBasedOnUrl ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:author ],
        [ sh:node :ValidSchemaMediaObject ;
            sh:path schema1:encoding ],
        [ sh:node :ValidSchemaDuration ;
            sh:path schema1:timeRequired ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:workTranslation ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:temporal ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:award ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:text ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:recordedAt ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:accountablePerson ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:conditionsOfAccess ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:copyrightYear ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:funder ],
        [ sh:node :ValidSchemaAlignmentObject ;
            sh:path schema1:educationalAlignment ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:genre ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:maintainer ],
        [ sh:or ( [ sh:node :ValidSchemaDateTime ] [ sh:node :ValidSchemaDate ] ) ;
            sh:path schema1:datePublished ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:dateCreated ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:keywords ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accessibilityAPI ],
        [ sh:node :ValidSchemaPublicationEvent ;
            sh:path schema1:publication ],
        [ sh:or ( [ sh:node :ValidSchemaDate ] [ sh:node :ValidSchemaDateTime ] ) ;
            sh:path schema1:expires ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accessibilityHazard ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:fileFormat ],
        [ sh:or ( [ sh:node :ValidSchemaClip ] [ sh:node :ValidSchemaVideoObject ] ) ;
            sh:path schema1:video ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:version ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:creator ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:typicalAgeRange ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:acquireLicensePage ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:reviews ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:usageInfo ],
        [ sh:or ( [ sh:node :ValidSchemaRating ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:contentRating ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accessibilityFeature ],
        [ sh:node :ValidSchemaThing ;
            sh:path schema1:mentions ],
        [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:learningResourceType ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isAccessibleForFree ],
        [ sh:or ( [ sh:node :ValidSchemaInteger ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:position ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:editor ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:creativeWorkStatus ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:provider ],
        [ sh:node :ValidSchemaClaim ;
            sh:path schema1:interpretedAsClaim ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:sdDatePublished ],
        [ sh:node :ValidSchemaCreativeWork ;
            sh:path schema1:translationOfWork ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:editEIDR ],
        [ sh:node :ValidSchemaDateTime ;
            sh:path schema1:contentReferenceTime ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:translator ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:copyrightNotice ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:accessMode ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:spatialCoverage ],
        [ sh:node :ValidSchemaPublicationEvent ;
            sh:path schema1:releasedEvent ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:educationalUse ],
        [ sh:or ( [ sh:node :ValidSchemaWebPage ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:archivedAt ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:commentCount ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaSizeSpecification ] [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDefinedTerm ] ) ;
            sh:path schema1:size ] ;
    sh:targetClass schema1:CreativeWork .

:ValidSchemaDefinedTerm a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:termCode ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTermSet ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:inDefinedTermSet ] ;
    sh:targetClass schema1:DefinedTerm .

:ValidSchemaInteger a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Integer .

:ValidSchemaPlace a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:address ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:globalLocationNumber ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoOverlaps ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoCoveredBy ],
        [ sh:node :ValidSchemaOpeningHoursSpecification ;
            sh:path schema1:specialOpeningHoursSpecification ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:reviews ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:faxNumber ],
        [ sh:or ( [ sh:node :ValidSchemaGeospatialGeometry ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:geoCovers ],
        [ sh:or ( [ sh:node :ValidSchemaGeospatialGeometry ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:geoTouches ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaMap ] ) ;
            sh:path schema1:hasMap ],
        [ sh:or ( [ sh:node :ValidSchemaImageObject ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:logo ],
        [ sh:or ( [ sh:node :ValidSchemaPhotograph ] [ sh:node :ValidSchemaImageObject ] ) ;
            sh:path schema1:photo ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:tourBookingPage ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:maps ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:isicV4 ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoEquals ],
        [ sh:or ( [ sh:node :ValidSchemaGeoCoordinates ] [ sh:node :ValidSchemaGeoShape ] ) ;
            sh:path schema1:geo ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:longitude ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoContains ],
        [ sh:node :ValidSchemaLocationFeatureSpecification ;
            sh:path schema1:amenityFeature ],
        [ sh:node :ValidSchemaInteger ;
            sh:path schema1:maximumAttendeeCapacity ],
        [ sh:or ( [ sh:node :ValidSchemaGeospatialGeometry ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:geoIntersects ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:telephone ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoCrosses ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:containedIn ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:slogan ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:containedInPlace ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:hasDriveThroughService ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:publicAccess ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoDisjoint ],
        [ sh:node :ValidSchemaURL ;
            sh:path schema1:map ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:keywords ],
        [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:events ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:isAccessibleForFree ],
        [ sh:node :ValidSchemaOpeningHoursSpecification ;
            sh:path schema1:openingHoursSpecification ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:latitude ],
        [ sh:node :ValidSchemaBoolean ;
            sh:path schema1:smokingAllowed ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:event ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeospatialGeometry ] ) ;
            sh:path schema1:geoWithin ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:branchCode ],
        [ sh:or ( [ sh:node :ValidSchemaImageObject ] [ sh:node :ValidSchemaPhotograph ] ) ;
            sh:path schema1:photos ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:containsPlace ],
        [ sh:node :ValidSchemaPropertyValue ;
            sh:path schema1:additionalProperty ] ;
    sh:targetClass schema1:Place .

:ValidSchemaDate a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Date .

:ValidSchemaDateTime a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:DateTime .

:ValidSchemaQuantitativeValue a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:unitCode ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:unitText ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaPropertyValue ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaMeasurementTypeEnumeration ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaEnumeration ] [ sh:node :ValidSchemaQualitativeValue ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:valueReference ],
        [ sh:or ( [ sh:node :ValidSchemaNumber ] [ sh:node :ValidSchemaBoolean ] [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaStructuredValue ] ) ;
            sh:path schema1:value ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:maxValue ],
        [ sh:node :ValidSchemaPropertyValue ;
            sh:path schema1:additionalProperty ],
        [ sh:node :ValidSchemaNumber ;
            sh:path schema1:minValue ] ;
    sh:targetClass schema1:QuantitativeValue .

:ValidSchemaNumber a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Number .

:ValidSchemaOrganization a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaText ;
            sh:path schema1:faxNumber ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:foundingLocation ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:funder ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:diversityPolicy ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:award ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:events ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:foundingDate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:naics ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:correctionsPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaBrand ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:brand ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:contactPoints ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:legalName ],
        [ sh:node :ValidSchemaGrant ;
            sh:path schema1:funding ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:parentOrganization ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:reviews ],
        [ sh:node :ValidSchemaAggregateRating ;
            sh:path schema1:aggregateRating ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:knowsAbout ],
        [ sh:node :ValidSchemaNonprofitType ;
            sh:path schema1:nonprofitStatus ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:globalLocationNumber ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaArticle ] ) ;
            sh:path schema1:diversityStaffingReport ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:slogan ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:hasPOS ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:event ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:awards ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:address ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:members ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:iso6523Code ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:publishingPrinciples ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:employee ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:telephone ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:taxID ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:actionableFeedbackPolicy ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaVirtualLocation ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:location ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:knowsLanguage ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:keywords ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:areaServed ],
        [ sh:node :ValidSchemaReview ;
            sh:path schema1:review ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:founders ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:dissolutionDate ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:unnamedSourcesPolicy ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:leiCode ],
        [ sh:node :ValidSchemaInteractionCounter ;
            sh:path schema1:interactionStatistic ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaAboutPage ] ) ;
            sh:path schema1:ownershipFundingInfo ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaGeoShape ] [ sh:node :ValidSchemaAdministrativeArea ] ) ;
            sh:path schema1:serviceArea ],
        [ sh:node :ValidSchemaEducationalOccupationalCredential ;
            sh:path schema1:hasCredential ],
        [ sh:or ( [ sh:node :ValidSchemaProgramMembership ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:memberOf ],
        [ sh:or ( [ sh:node :ValidSchemaURL ] [ sh:node :ValidSchemaCreativeWork ] ) ;
            sh:path schema1:ethicsPolicy ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:employees ],
        [ sh:or ( [ sh:node :ValidSchemaImageObject ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:logo ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:vatID ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:isicV4 ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:member ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:sponsor ],
        [ sh:node :ValidSchemaDemand ;
            sh:path schema1:seeks ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:duns ],
        [ sh:or ( [ sh:node :ValidSchemaOwnershipInfo ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:owns ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:founder ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:subOrganization ],
        [ sh:node :ValidSchemaOffer ;
            sh:path schema1:makesOffer ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:alumni ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:email ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:contactPoint ],
        [ sh:node :ValidSchemaProductReturnPolicy ;
            sh:path schema1:hasProductReturnPolicy ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:numberOfEmployees ],
        [ sh:node :ValidSchemaMerchantReturnPolicy ;
            sh:path schema1:hasMerchantReturnPolicy ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:department ],
        [ sh:node :ValidSchemaOfferCatalog ;
            sh:path schema1:hasOfferCatalog ] ;
    sh:targetClass schema1:Organization .

:ValidSchemaPerson a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:property [ sh:node :ValidSchemaGrant ;
            sh:path schema1:funding ],
        [ sh:node :ValidSchemaOccupation ;
            sh:path schema1:hasOccupation ],
        [ sh:node :ValidSchemaEducationalOccupationalCredential ;
            sh:path schema1:hasCredential ],
        [ sh:node :ValidSchemaInteractionCounter ;
            sh:path schema1:interactionStatistic ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:award ],
        [ sh:node :ValidSchemaEvent ;
            sh:path schema1:performerIn ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:hasPOS ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:callSign ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:contactPoints ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:sibling ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaThing ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:knowsAbout ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:deathDate ],
        [ sh:or ( [ sh:node :ValidSchemaEducationalOrganization ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:alumniOf ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:naics ],
        [ sh:or ( [ sh:node :ValidSchemaPostalAddress ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:address ],
        [ sh:or ( [ sh:node :ValidSchemaPlace ] [ sh:node :ValidSchemaContactPoint ] ) ;
            sh:path schema1:workLocation ],
        [ sh:or ( [ sh:node :ValidSchemaPriceSpecification ] [ sh:node :ValidSchemaMonetaryAmount ] ) ;
            sh:path schema1:netWorth ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:telephone ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:globalLocationNumber ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:spouse ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:givenName ],
        [ sh:node :ValidSchemaDate ;
            sh:path schema1:birthDate ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:familyName ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:additionalName ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:isicV4 ],
        [ sh:or ( [ sh:node :ValidSchemaCreativeWork ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:publishingPrinciples ],
        [ sh:or ( [ sh:node :ValidSchemaDefinedTerm ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:jobTitle ],
        [ sh:or ( [ sh:node :ValidSchemaQuantitativeValue ] [ sh:node :ValidSchemaDistance ] ) ;
            sh:path schema1:height ],
        [ sh:or ( [ sh:node :ValidSchemaGenderType ] [ sh:node :ValidSchemaText ] ) ;
            sh:path schema1:gender ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:affiliation ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:relatedTo ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:duns ],
        [ sh:node :ValidSchemaDemand ;
            sh:path schema1:seeks ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:funder ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:awards ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:birthPlace ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:honorificPrefix ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:faxNumber ],
        [ sh:node :ValidSchemaCountry ;
            sh:path schema1:nationality ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:knows ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:vatID ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:parent ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:taxID ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:email ],
        [ sh:node :ValidSchemaOrganization ;
            sh:path schema1:worksFor ],
        [ sh:or ( [ sh:node :ValidSchemaOrganization ] [ sh:node :ValidSchemaPerson ] ) ;
            sh:path schema1:sponsor ],
        [ sh:node :ValidSchemaPlace ;
            sh:path schema1:deathPlace ],
        [ sh:or ( [ sh:node :ValidSchemaContactPoint ] [ sh:node :ValidSchemaPlace ] ) ;
            sh:path schema1:homeLocation ],
        [ sh:node :ValidSchemaOfferCatalog ;
            sh:path schema1:hasOfferCatalog ],
        [ sh:node :ValidSchemaOffer ;
            sh:path schema1:makesOffer ],
        [ sh:or ( [ sh:node :ValidSchemaOwnershipInfo ] [ sh:node :ValidSchemaProduct ] ) ;
            sh:path schema1:owns ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:children ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:colleagues ],
        [ sh:or ( [ sh:node :ValidSchemaProgramMembership ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:memberOf ],
        [ sh:node :ValidSchemaQuantitativeValue ;
            sh:path schema1:weight ],
        [ sh:or ( [ sh:node :ValidSchemaPerson ] [ sh:node :ValidSchemaURL ] ) ;
            sh:path schema1:colleague ],
        [ sh:or ( [ sh:node :ValidSchemaBrand ] [ sh:node :ValidSchemaOrganization ] ) ;
            sh:path schema1:brand ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:siblings ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:parents ],
        [ sh:node :ValidSchemaContactPoint ;
            sh:path schema1:contactPoint ],
        [ sh:node :ValidSchemaText ;
            sh:path schema1:honorificSuffix ],
        [ sh:node :ValidSchemaPerson ;
            sh:path schema1:follows ],
        [ sh:or ( [ sh:node :ValidSchemaText ] [ sh:node :ValidSchemaLanguage ] ) ;
            sh:path schema1:knowsLanguage ] ;
    sh:targetClass schema1:Person .

:ValidSchemaURL a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:URL .

:ValidSchemaText a sh:NodeShape ;
    sh:nodeKind sh:BlankNodeOrIRI ;
    sh:targetClass schema1:Text .

