
### schemaorg/Dockerfile.ubuntu-15.04 "schemaorg/schemaorg-ubuntu-15.04"

FROM ubuntu:15.04

RUN apt-get update && apt-get upgrade -y
RUN apt-get update && apt-get install -y \
    sudo \
    ca-certificates \
    git \
    language-pack-en \
    make \
    python \
    unzip \
    curl \
    screen \
    openssh-server

## ARGs and ENVs
#   _USER='app'
ARG _USER='app'
#   _APP='schemaorg'
ARG _APP="schemaorg"
#   _HOME='/home/app'
ENV _HOME="/home/${_USER}"
#   _WRD='/home/app/schemaorg'
ARG _WRD="${_HOME}/${_APP}"
ENV GITDEST "${_WRD}"

## Setup
RUN useradd -U -m "${_USER}"
# RUN useradd -U -m -G admin app
# RUN useradd -U -m -G sudo app
#
ADD ./Makefile "${_HOME}/Makefile"
RUN chown -R ${_USER}:${_USER} "${_HOME}"

## install AppEngine SDK
#ARG APPENGINESDK_VERSION=1.9.32
ENV APPENGINESDK_VERSION=1.9.32
ENV APPENGINESDK_ARCHIVE="google_appengine_${APPENGINESDK_VERSION}.zip"
ENV APPENGINESDK_ARCHIVE_URL="https://storage.googleapis.com/appengine-sdks/featured/${APPENGINESDK_ARCHIVE}"
ENV APPENGINESDK_BASEPATH="${_HOME}/google-cloud-sdk/platform"
ENV APPENGINESDK_PREFIX="${APPENGINESDK_BASEPATH}/google_appengine"
#ENV APPENGINESDK_PREFIX="/usr/local/google_appengine"

### cd /home/app
USER ${_USER}
WORKDIR "${_HOME}"

## install AppEngine SDK
RUN curl -f -s -S -O "${APPENGINESDK_ARCHIVE_URL}"
RUN mkdir -p "${APPENGINESDK_PREFIX}"
RUN unzip -q "${APPENGINESDK_ARCHIVE}" -d "${APPENGINESDK_BASEPATH}"

## install pip
RUN curl -s -S -O https://bootstrap.pypa.io/get-pip.py
RUN python ./get-pip.py --user


## docker build --build-args GITURL= --build-args GITREV=
#ENV GITURL 'https://github.com/schemaorg/schemaorg'
#ENV GITREV 'sdo-deimos'
## Docker 1.9 --build-args
ARG GITURL='https://github.com/schemaorg/schemaorg'
ARG GITREV='sdo-deimos'
#Docker < 1.9, static: username/schemaorg , branch
#ENV GITURL 'https://github.com/westurner/schemaorg'
#ENV GITREV 'feature/ext-course'

## RUN make clone GITDEST="/home/app/schemaorg"
RUN git clone --depth=20 "${GITURL}" -b "${GITREV}" "${GITDEST}"
# ADD . "${_WRD}"  # *this* revision
WORKDIR "${_WRD}"
RUN git -C "${_WRD}" log -n6 --stat
RUN ls -al "${_WRD}"

## RUN make install_pip_requirements
# RUN python -m pip install --user rdflib
RUN python -m pip install --user -r "${_WRD}/requirements.txt"
RUN python -m pip install --user -r "${_WRD}/requirements-test-extra.txt" ipython

## RUN make test
RUN make -C "${_WRD}" test 2>&1 | tee "${_HOME}/schemaorg.test.log"

ENV _VAR="${_HOME}/.${_APP}"
ENV _VAR_DATA="${_VAR}/data"
RUN mkdir -p "${_VAR_DATA}"

EXPOSE 8000 8080 22
## RUN make run
ENV _dev_appserver "${APPENGINESDK_PREFIX}/dev_appserver.py"
RUN "${_dev_appserver}" --help
#CMD ["sh", "-c", "$_dev_appserver", \
#    "--automatic_restart=1", \
#    "--skip_sdk_update_check=1", \
#    "--storage-path="${_VAR_DATA}"
#    "$_WRD"]
#ADD servicedef for dev_appserver.py
USER root
CMD ['/sbin/init']

## ONBUILD for downstream images
ONBUILD RUN sudo -u app git -C "${_WRD}" fetch
ONBUILD RUN sudo -u app git -C "${_WRD}" checkout '${GITREV}'
ONBUILD RUN sudo -u app make -C "${_WRD}" test

